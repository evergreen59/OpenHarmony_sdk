# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("$build_root/toolchain/gcc_toolchain.gni")

template("ark_clang_toolchain") {
  gcc_toolchain(target_name) {
    prefix = rebase_path("$clang_base_path/bin", root_build_dir)
    cc = "$prefix/clang"
    cxx = "$prefix/clang++"
    ld = cxx
    readelf = "$prefix/llvm-readobj"
    ar = "${prefix}/llvm-ar"
    nm = "$prefix/llvm-nm"

    forward_variables_from(invoker,
                           [
                             "strip",
                             "is_clang_analysis_supported",
                             "enable_linker_map",
                             "use_unstripped_as_runtime_outputs",
                           ])

    toolchain_args = {
      if (defined(invoker.toolchain_args)) {
        forward_variables_from(invoker.toolchain_args, "*")
      }
      is_clang = true
    }

    if (defined(invoker.shlib_extension) && invoker.shlib_extension != "") {
      shlib_extension = invoker.shlib_extension
    }
  }
}
