# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/account/os_account/os_account.gni")
import("//build/ohos.gni")

config("account_iam_innnerkits_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${account_iam_interfaces_native_path}/include",
    "${innerkits_path}/include",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  cflags += [ "-pipe" ]
  cflags_cc = [
    "-Wdate-time",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wshadow",
  ]

  if (has_pin_auth_part) {
    cflags_cc += [ "-DHAS_PIN_AUTH_PART" ]
  }

  if (has_user_auth_part) {
    cflags_cc += [ "-DHAS_USER_AUTH_PART" ]
  }

  defines = [
    "ACCOUNT_LOG_TAG = \"AccountIAMFwk\"",
    "LOG_DOMAIN = 0xD001B00",
  ]
}

config("account_iam_innerkits_public_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${account_iam_interfaces_native_path}/include",
    "${innerkits_native_path}/include",
    "//base/useriam/pin_auth/frameworks/ipc/common_defines",
    "//base/useriam/pin_auth/frameworks/ipc/inc",
    "//base/useriam/pin_auth/interfaces/inner_api",
    "//base/useriam/user_auth_framework/interfaces/inner_api",
  ]
}

ohos_shared_library("account_iam_innerkits") {
  sources = [
    "${account_iam_framework_path}/src/account_iam_callback_service.cpp",
    "${account_iam_framework_path}/src/account_iam_callback_stub.cpp",
    "${account_iam_framework_path}/src/account_iam_client.cpp",
    "${account_iam_framework_path}/src/account_iam_mgr_proxy.cpp",
  ]

  configs = [
    ":account_iam_innnerkits_config",
    "${account_coverage_config_path}:coverage_flags",
  ]

  public_configs = [ ":account_iam_innerkits_public_config" ]

  deps = [
    "${domain_account_framework_path}:domain_account_innerkits",
    "${innerkits_native_path}:libaccountkits",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "//base/security/access_token/interfaces/innerkits/token_setproc:libtoken_setproc",
  ]

  if (has_pin_auth_part) {
    deps += [ "//base/useriam/pin_auth/frameworks:pinauth_framework" ]
  }

  if (has_user_auth_part) {
    deps += [ "//base/useriam/user_auth_framework/frameworks/native/client:userauth_client" ]
  }

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  subsystem_name = "account"
  part_name = "os_account"
}
