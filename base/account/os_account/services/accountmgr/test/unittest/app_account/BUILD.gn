# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/account/os_account/os_account.gni")
import("//build/test.gni")

module_output_path = "os_account/services/app_account"

config("app_account_service_config_mock") {
  include_dirs = [
    "//third_party/googletest/googlemock/include",
    "${app_account_services_path}/test/mock/app_account",
    "${app_account_services_path}/test/mock/common",
    "${app_account_innerkits_native_path}/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
  ]
}

config("app_account_service_config_unittest") {
  visibility = [ ":*" ]

  include_dirs = []

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  defines = [
    "ACCOUNT_LOG_TAG = \"AppAccountUTest\"",
    "LOG_DOMAIN = 0xD001B00",
  ]
}

ohos_unittest("account_permission_manager_test") {
  module_out_path = module_output_path

  sources = [
    "${app_account_services_path}/test/mock/app_account/accesstoken_kit.cpp",
    "account_permission_manager_test.cpp",
  ]

  configs = [
    ":app_account_service_config_mock",
    ":app_account_service_config_unittest",
  ]

  deps = [
    "${app_account_innerkits_native_path}:app_account_innerkits",
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
  ]
}

ohos_unittest("app_account_data_storage_test") {
  module_out_path = module_output_path

  sources = [
    "${app_account_services_path}/test/mock/app_account/accesstoken_kit.cpp",
    "${app_account_services_path}/test/mock/common/bundle_manager_adapter.cpp",
    "app_account_data_storage_test.cpp",
  ]

  configs = [
    ":app_account_service_config_mock",
    ":app_account_service_config_unittest",
  ]

  deps = [
    "${app_account_innerkits_native_path}:app_account_innerkits",
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
  ]
}

ohos_unittest("app_account_info_test") {
  module_out_path = module_output_path

  sources = [ "app_account_info_test.cpp" ]

  configs = [ ":app_account_service_config_unittest" ]

  deps = [
    "${app_account_innerkits_native_path}:app_account_innerkits",
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
  ]
}

ohos_unittest("app_account_manager_service_test") {
  module_out_path = module_output_path
  cflags_cc = []
  sources = [
    "${app_account_services_path}/test/mock/app_account/accesstoken_kit.cpp",
    "${app_account_services_path}/test/mock/app_account/mock_inner_app_account_manager.cpp",
    "${app_account_services_path}/test/mock/common/bundle_manager_adapter.cpp",
    "app_account_manager_service_test.cpp",
  ]

  configs = [
    ":app_account_service_config_mock",
    ":app_account_service_config_unittest",
  ]

  deps = [
    "${app_account_innerkits_native_path}:app_account_innerkits",
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
  ]

  if (has_ces_part) {
    cflags_cc += [ "-DHAS_CES_PART" ]
    external_deps += [ "common_event_service:cesfwk_innerkits" ]
  }
}

ohos_unittest("app_account_subscribe_info_test") {
  module_out_path = module_output_path

  sources = [ "app_account_subscribe_info_test.cpp" ]

  configs = [ ":app_account_service_config_unittest" ]

  deps = [
    "${app_account_innerkits_native_path}:app_account_innerkits",
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
  ]
}

ohos_unittest("app_account_test") {
  module_out_path = module_output_path

  sources = [
    "${app_account_services_path}/test/mock/app_account/mock_app_account_stub.cpp",
    "app_account_test.cpp",
  ]

  configs = [
    ":app_account_service_config_mock",
    ":app_account_service_config_unittest",
  ]

  deps = [
    "${app_account_innerkits_native_path}:app_account_innerkits",
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
  ]
}

ohos_unittest("inner_app_account_manager_test") {
  module_out_path = module_output_path

  sources = [
    "${app_account_services_path}/test/mock/app_account/mock_app_account_control_manager.cpp",
    "${app_account_services_path}/test/mock/app_account/mock_app_account_subscribe_manager.cpp",
    "inner_app_account_manager_test.cpp",
  ]

  configs = [
    ":app_account_service_config_mock",
    ":app_account_service_config_unittest",
  ]

  deps = [
    "${app_account_innerkits_native_path}:app_account_innerkits",
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
  ]
}

group("unittest") {
  testonly = true

  deps = [
    ":account_permission_manager_test",
    ":app_account_data_storage_test",
    ":app_account_info_test",
    ":app_account_manager_service_test",
    ":app_account_subscribe_info_test",
    ":app_account_test",
    ":inner_app_account_manager_test",
  ]
}
