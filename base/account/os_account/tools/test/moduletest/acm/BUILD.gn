# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/account/os_account/os_account.gni")
import("//build/test.gni")

module_output_path = "os_account/tools"

ohos_moduletest("account_command_create_module_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/tools/aa/include",
    "${ability_runtime_path}/tools/test/systemtest/aa",
  ]

  sources = [
    "${ability_runtime_path}/tools/aa/src/shell_command.cpp",
    "${ability_runtime_path}/tools/test/systemtest/aa/tool_system_test.cpp",
    "${tools_path}/acm/src/account_command.cpp",
    "account_command_create_module_test.cpp",
    "account_command_util.cpp",
  ]

  configs = [
    "${ability_runtime_path}/interfaces/inner_api/ability_manager:ability_manager_public_config",
    "${tools_path}/acm:tools_acm_config",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

ohos_moduletest("account_command_delete_module_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/tools/aa/include",
    "${ability_runtime_path}/tools/test/systemtest/aa",
  ]

  sources = [
    "${ability_runtime_path}/tools/aa/src/shell_command.cpp",
    "${ability_runtime_path}/tools/test/systemtest/aa/tool_system_test.cpp",
    "${tools_path}/acm/src/account_command.cpp",
    "account_command_delete_module_test.cpp",
    "account_command_util.cpp",
  ]

  configs = [
    "${ability_runtime_path}/interfaces/inner_api/ability_manager:ability_manager_public_config",
    "${tools_path}/acm:tools_acm_config",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

ohos_moduletest("account_command_dump_module_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/tools/aa/include",
    "${ability_runtime_path}/tools/test/systemtest/aa",
  ]

  sources = [
    "${ability_runtime_path}/tools/aa/src/shell_command.cpp",
    "${ability_runtime_path}/tools/test/systemtest/aa/tool_system_test.cpp",
    "${tools_path}/acm/src/account_command.cpp",
    "account_command_dump_module_test.cpp",
    "account_command_util.cpp",
  ]

  configs = [
    "${ability_runtime_path}/interfaces/inner_api/ability_manager:ability_manager_public_config",
    "${tools_path}/acm:tools_acm_config",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

ohos_moduletest("account_command_set_module_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/tools/aa/include",
    "${ability_runtime_path}/tools/test/systemtest/aa",
  ]

  sources = [
    "${ability_runtime_path}/tools/aa/src/shell_command.cpp",
    "${ability_runtime_path}/tools/test/systemtest/aa/tool_system_test.cpp",
    "${tools_path}/acm/src/account_command.cpp",
    "account_command_set_module_test.cpp",
    "account_command_util.cpp",
  ]

  configs = [
    "${ability_runtime_path}/interfaces/inner_api/ability_manager:ability_manager_public_config",
    "${tools_path}/acm:tools_acm_config",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

ohos_moduletest("account_command_switch_module_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/tools/aa/include",
    "${ability_runtime_path}/tools/test/systemtest/aa",
  ]

  sources = [
    "${ability_runtime_path}/tools/aa/src/shell_command.cpp",
    "${ability_runtime_path}/tools/test/systemtest/aa/tool_system_test.cpp",
    "${tools_path}/acm/src/account_command.cpp",
    "account_command_switch_module_test.cpp",
    "account_command_util.cpp",
  ]

  configs = [
    "${ability_runtime_path}/interfaces/inner_api/ability_manager:ability_manager_public_config",
    "${tools_path}/acm:tools_acm_config",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

group("moduletest") {
  testonly = true

  deps = [
    ":account_command_create_module_test",
    ":account_command_delete_module_test",
    ":account_command_dump_module_test",
    ":account_command_set_module_test",
    ":account_command_switch_module_test",
  ]
}
