{
  global:
    extern "C++" {
        "OHOS::HiviewDFX::EventDispatchQueue::Stop()";
        "OHOS::HiviewDFX::EventLoop::StopLoop()";
        "OHOS::HiviewDFX::HiviewGlobal::ReleaseInstance()";
        "OHOS::HiviewDFX::EventDispatchQueue::~EventDispatchQueue()";
        "OHOS::HiviewDFX::HiviewGlobal::CreateInstance(OHOS::HiviewDFX::HiviewContext&)";
        "OHOS::HiviewDFX::Audit::Init(bool)";
        "OHOS::HiviewDFX::EventDispatchQueue::EventDispatchQueue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, OHOS::HiviewDFX::Event::ManageType, OHOS::HiviewDFX::HiviewContext*)";
        "OHOS::HiviewDFX::EventDispatchQueue::Start()";
        "OHOS::HiviewDFX::EventLoop::StartLoop(bool)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>, std::__h::function<void ()> const&, unsigned long long, bool)";
        "OHOS::HiviewDFX::Plugin::GetWorkLoop()";
        "OHOS::HiviewDFX::Plugin::GetName()";
        "OHOS::HiviewDFX::EventLoop::AddEvent(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>, std::__h::function<void ()>)";
        "OHOS::HiviewDFX::Plugin::BindWorkLoop(std::__h::shared_ptr<OHOS::HiviewDFX::EventLoop>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::GetGlobalPluginInfo(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::Plugin::SetName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventSource::AddPipeline(std::__h::shared_ptr<OHOS::HiviewDFX::Pipeline>)";
        "OHOS::HiviewDFX::PluginProxy::LoadPluginIfNeed()";
        "OHOS::HiviewDFX::EventLoop::EventLoop(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventDispatchQueue::Enqueue(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::EventDispatcher::RegisterListener(std::__h::weak_ptr<OHOS::HiviewDFX::EventListener>)";
        "OHOS::HiviewDFX::EventDispatcher::RegisterListener(std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::EventLoop::AddEventForResult(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginUnload(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::UnregisterPlugin(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::Event::SetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::PluginFactory::UnregisterPlugin(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::Event::GetIntValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&) const";
        "OHOS::HiviewDFX::PluginProxy::DestroyInstanceIfNeed(long long)";
        "OHOS::HiviewDFX::Audit::~Audit()";
        "OHOS::HiviewDFX::Event::ResetTimestamp()";
        "OHOS::HiviewDFX::Plugin::GetVersion()";
        "OHOS::HiviewDFX::AuditLogParser::StartParse()";
        "OHOS::HiviewDFX::AuditLogParser::GetAuditLogTimeScope()";
        "OHOS::HiviewDFX::AuditLogParser::GetPluginSummary(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::AuditLogParser::GetThreadSummary(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::Pipeline::AppendProcessor(std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::AuditLogParser::GetPipelineSummary(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::totalCount_";
        "OHOS::HiviewDFX::SysEvent::totalSize_";
        "OHOS::HiviewDFX::SysEventCreator::SysEventCreator(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, OHOS::HiviewDFX::SysEventCreator::EventType)";
        "OHOS::HiviewDFX::HiviewGlobal::GetInstance()";
        "OHOS::HiviewDFX::HiviewGlobal::PostSyncEventToTarget(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::SysEventCreator::EscapeStringValue(char const*)";
        "OHOS::HiviewDFX::SysEventCreator::EscapeStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, OHOS::HiviewDFX::PipelineEventProducer*, OHOS::HiviewDFX::SysEventCreator&)";
        "OHOS::HiviewDFX::SysEvent::ParseJson()";
        "OHOS::HiviewDFX::EventSource::PublishPipelineEvent(std::__h::shared_ptr<OHOS::HiviewDFX::PipelineEvent>)";
        "OHOS::HiviewDFX::Plugin::~Plugin()";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::PluginFactory::RegisterPlugin(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::shared_ptr<OHOS::HiviewDFX::PluginRegistInfo>)";
        "OHOS::HiviewDFX::Plugin::OnEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>&)";
        "OHOS::HiviewDFX::Plugin::OnEventProxy(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::CanProcessEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::IsInterestedPipelineEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::CanProcessMoreEvents()";
        "OHOS::HiviewDFX::Plugin::GetHandlerInfo()";
        "OHOS::HiviewDFX::Plugin::GetPluginInfo()";
        "OHOS::HiviewDFX::SysEvent::GetEventIntValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::GetPid() const";
        "OHOS::HiviewDFX::Event::SetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, int)";
        "OHOS::HiviewDFX::Event::GetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&) const";
        "OHOS::HiviewDFX::EventThreadPool::AddTask(std::__h::function<void ()>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, unsigned long long, unsigned char)";
        "OHOS::HiviewDFX::SysEvent::GetSeq() const";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, bool)";
        "OHOS::HiviewDFX::LogStoreEx::CreateLogFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::GetUid() const";
        "OHOS::HiviewDFX::SysEvent::GetTid() const";
        "OHOS::HiviewDFX::SysEvent::GetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::Plugin::SetVersion(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::LogStoreEx::SetMaxSize(unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::SetMinKeepingFileNumber(unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::Init()";
        "OHOS::HiviewDFX::EventLoop::AddFileDescriptorEventCallback(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::shared_ptr<OHOS::HiviewDFX::FileDescriptorEventCallback>)";
        "OHOS::HiviewDFX::EventThreadPool::EventThreadPool(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventThreadPool::~EventThreadPool()";
        "OHOS::HiviewDFX::EventThreadPool::Start()";
        "OHOS::HiviewDFX::EventThreadPool::Stop()";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, long long)";
        "OHOS::HiviewDFX::PipelineEvent::SetPipelineInfo(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::list<std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>, std::__h::allocator<std::__h::weak_ptr<OHOS::HiviewDFX::Plugin> > >&)";
        "OHOS::HiviewDFX::LogStoreEx::LogStoreEx(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, bool)";
        "OHOS::HiviewDFX::EventListener::AddListenerInfo(unsigned int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventSource::StartEventSource()";
        "OHOS::HiviewDFX::HiviewGlobal::GetHiViewDirectory(OHOS::HiviewDFX::HiviewContext::DirectoryType) const";
        "OHOS::HiviewDFX::StoreManager::CloseDocStore(OHOS::HiviewDFX::Option const&)";
        "OHOS::HiviewDFX::LoggerEvent::GetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::ParamValue::GetString() const";
        "OHOS::HiviewDFX::LoggerEvent::ToJsonString()";
        "OHOS::HiviewDFX::DataQuery::DataQuery()";
        "OHOS::HiviewDFX::DataQuery::~DataQuery()";
        "OHOS::HiviewDFX::StoreManager::GetDocStore(OHOS::HiviewDFX::Option const&)";
        "OHOS::HiviewDFX::DocStore::Merge(OHOS::HiviewDFX::Entry const&, char const*)";
        "OHOS::HiviewDFX::DocStore::Put(OHOS::HiviewDFX::Entry const&, char const*)";
        "OHOS::HiviewDFX::DocStore::GetEntriesWithQuery(OHOS::HiviewDFX::DataQuery const&, std::__h::vector<OHOS::HiviewDFX::Entry, std::__h::allocator<OHOS::HiviewDFX::Entry> >&, char const*) const";
        "OHOS::HiviewDFX::DocStore::Delete(OHOS::HiviewDFX::DataQuery const&, char const*)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__h::vector<unsigned int, std::__h::allocator<unsigned int> > const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(unsigned int)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(unsigned long long)";
        "OHOS::HiviewDFX::ParamValue::GetUint64() const";
        "OHOS::HiviewDFX::ParamValue::ParamValue()";
        "OHOS::HiviewDFX::LoggerEvent::InnerUpdate(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, OHOS::HiviewDFX::ParamValue const&)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginStats()";
        "OHOS::HiviewDFX::HiviewEventCacher::GetPluginStatsEvents(std::__h::vector<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__h::allocator<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent> > >&)";
        "OHOS::HiviewDFX::StoreManager::DeleteDocStore(OHOS::HiviewDFX::Option const&)";
        "OHOS::HiviewDFX::SysEvent::SetSeq(long long)";
        "OHOS::HiviewDFX::HiviewGlobal::PostUnorderedEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::DataQuery::Limit(int, int)";
        "OHOS::HiviewDFX::DocStore::GetNum()";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> >, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > > > const&)";
        "OHOS::HiviewDFX::HiviewEventCacher::AddPluginStatsEvent(std::__h::vector<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__h::allocator<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent> > > const&)";
        "OHOS::HiviewDFX::DataQuery::NotStartWith(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::DataQuery::StartWith(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::DataQuery::And()";
        "OHOS::HiviewDFX::DataQuery::Or()";
        "OHOS::HiviewDFX::DataQuery::BeginGroup()";
        "OHOS::HiviewDFX::DataQuery::EndGroup()";
        "OHOS::HiviewDFX::DataQuery::Select(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> >, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > > > const&)";
        "OHOS::HiviewDFX::DataQuery::OrderByDesc(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::DataQuery::OrderByAsc(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::~SysEvent()";
        "OHOS::HiviewDFX::DataQuery::ToString() const";
        "OHOS::HiviewDFX::SysEvent::GetEventSeq() const";
        "OHOS::HiviewDFX::LogStoreEx::SetLogFileComparator(std::__h::function<bool (OHOS::HiviewDFX::LogFile const&, OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::LogStoreEx::ClearSameLogFilesIfNeeded(std::__h::function<bool (OHOS::HiviewDFX::LogFile const&)>, unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::GetLogFiles(std::__h::function<bool (OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::Event::GetKeyValuePairs()";
        "OHOS::HiviewDFX::Event::GetKeyValuePairs() const";
        "OHOS::HiviewDFX::Logger::GetInstance()";
        "OHOS::HiviewDFX::Logger::Print(unsigned int, unsigned int, char const*, char const*, ...)";
        "OHOS::HiviewDFX::PluginProxy::DestroyInstanceIfNeed(long)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>, std::__h::function<void ()> const&, unsigned long, bool)";
        "OHOS::HiviewDFX::EventThreadPool::AddTask(std::__h::function<void ()>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, unsigned long, unsigned char)";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, long)";
        "OHOS::HiviewDFX::SysEvent::SetSeq(long)";
        "OHOS::HiviewDFX::StoreManager::OnlineBackupDocStore(OHOS::HiviewDFX::Option const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::DocStore::GetEntryDuringQuery(OHOS::HiviewDFX::DataQuery const&, std::__h::function<int (int, OHOS::HiviewDFX::Entry const&)>, char const*) const";
        "OHOS::HiviewDFX::StoreManager::CloseDocStore(OHOS::HiviewDFX::Option const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(unsigned long)";
        "OHOS::HiviewDFX::FileUtil::FormatPath2UnixStyle(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> >&)";
        "OHOS::HiviewDFX::FileUtil::PathToRealPath(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> >&)";
        "OHOS::HiviewDFX::SysEvent::GetEventIntValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const& ... )";
        "OHOS::HiviewDFX::SysEvent::GetEventIntValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::GetEventValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventListener::AddListenerInfo(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::PluginFactory::RegisterPlugin(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<OHOS::HiviewDFX::PluginRegistInfo>)";
        "OHOS::HiviewDFX::Plugin::OnEventProxy(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::IsInterestedPipelineEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::EventListener::AddListenerInfo(unsigned int, OHOS::HiviewDFX::EventListener::EventIdRange const&)";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> >, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > > >&, bool, bool)";
        "OHOS::HiviewDFX::FileUtil::RemoveFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::FileUtil::IsLegalPath(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::FileUtil::ForceRemoveDirectory(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, bool)";
        "OHOS::HiviewDFX::FileUtil::FileExists(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::FileUtil::ForceCreateDirectory(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::FileUtil::ChangeMode(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, unsigned int const&)";
        "OHOS::HiviewDFX::StringUtil::ReplaceStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::FileUtil::GetFileSize(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::FileUtil::ForceCreateDirectory(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, unsigned int)";
        "OHOS::HiviewDFX::FileUtil::ExtractFileName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::FileUtil::RenameFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()> const&, unsigned long, bool)";
        "OHOS::HiviewDFX::EventLoop::AddEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()>)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()> const&, unsigned long, bool)";
        "OHOS::HiviewDFX::Plugin::BindWorkLoop(std::__1::shared_ptr<OHOS::HiviewDFX::EventLoop>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::GetGlobalPluginInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)";
        "OHOS::HiviewDFX::Plugin::SetName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)";
        "OHOS::HiviewDFX::EventSource::AddPipeline(std::__1::shared_ptr<OHOS::HiviewDFX::Pipeline>)";
        "OHOS::HiviewDFX::PluginFactory::GetGlobalPluginInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::Plugin::BindWorkLoop(std::__1::shared_ptr<OHOS::HiviewDFX::EventLoop>)";
        "OHOS::HiviewDFX::EventLoop::EventLoop(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventDispatchQueue::EventDispatchQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, OHOS::HiviewDFX::Event::ManageType, OHOS::HiviewDFX::HiviewContext*)";
        "OHOS::HiviewDFX::EventDispatchQueue::Enqueue(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::EventDispatcher::RegisterListener(std::__1::weak_ptr<OHOS::HiviewDFX::EventListener>)";
        "OHOS::HiviewDFX::EventDispatcher::RegisterListener(std::__1::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::EventLoop::AddEventForResult(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::EventLoop::AddEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginUnload(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::UnregisterPlugin(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::Event::SetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::Event::GetIntValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const";
        "OHOS::HiviewDFX::Pipeline::AppendProcessor(std::__1::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::EventLoop::~EventLoop()";
        "OHOS::HiviewDFX::AuditLogParser::GetPluginSummary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::AuditLogParser::GetThreadSummary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::AuditLogParser::GetPipelineSummary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEventCreator::SysEventCreator(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, OHOS::HiviewDFX::SysEventCreator::EventType)";
        "OHOS::HiviewDFX::HiviewGlobal::PostSyncEventToTarget(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::SysEventCreator::EscapeStringValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, OHOS::HiviewDFX::PipelineEventProducer*, OHOS::HiviewDFX::SysEventCreator&)";
        "OHOS::HiviewDFX::EventSource::PublishPipelineEvent(std::__1::shared_ptr<OHOS::HiviewDFX::PipelineEvent>)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::Plugin::OnEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>&)";
        "OHOS::HiviewDFX::Plugin::CanProcessEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Event::SetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)";
        "OHOS::HiviewDFX::Event::GetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const";
        "OHOS::HiviewDFX::EventThreadPool::AddTask(std::__1::function<void ()>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned char)";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)";
        "OHOS::HiviewDFX::LogStoreEx::CreateLogFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::Plugin::SetVersion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::EventLoop::AddFileDescriptorEventCallback(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<OHOS::HiviewDFX::FileDescriptorEventCallback>)";
        "OHOS::HiviewDFX::EventThreadPool::EventThreadPool(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, long)";
        "OHOS::HiviewDFX::PipelineEvent::SetPipelineInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::list<std::__1::weak_ptr<OHOS::HiviewDFX::Plugin>, std::__1::allocator<std::__1::weak_ptr<OHOS::HiviewDFX::Plugin> > >&)";
        "OHOS::HiviewDFX::LogStoreEx::LogStoreEx(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)";
        "OHOS::HiviewDFX::LoggerEvent::GetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::DocStore::GetEntriesWithQuery(OHOS::HiviewDFX::DataQuery const&, std::__1::vector<OHOS::HiviewDFX::Entry, std::__1::allocator<OHOS::HiviewDFX::Entry> >&, char const*) const";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::LoggerEvent::InnerUpdate(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, OHOS::HiviewDFX::ParamValue const&)";
        "OHOS::HiviewDFX::HiviewEventCacher::AddPluginStatsEvent(std::__1::vector<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__1::allocator<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent> > > const&)";
        "OHOS::HiviewDFX::HiviewEventCacher::GetPluginStatsEvents(std::__1::vector<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__1::allocator<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent> > >&)";
        "OHOS::HiviewDFX::HiviewGlobal::PostUnorderedEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::DataQuery::NotStartWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::DataQuery::StartWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::DataQuery::Select(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)";
        "OHOS::HiviewDFX::DataQuery::OrderByAsc(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::DataQuery::OrderByDesc(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::LogStoreEx::SetLogFileComparator(std::__1::function<bool (OHOS::HiviewDFX::LogFile const&, OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::LogStoreEx::ClearSameLogFilesIfNeeded(std::__1::function<bool (OHOS::HiviewDFX::LogFile const&)>, unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::GetLogFiles(std::__1::function<bool (OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::FileUtil::FormatPath2UnixStyle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ... )";
        "OHOS::HiviewDFX::FileUtil::FormatPath2UnixStyle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)";
        "OHOS::HiviewDFX::FileUtil::PathToRealPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_t ... )";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, bool, bool)";
        "OHOS::HiviewDFX::StringUtil::ReplaceStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)";
        "OHOS::HiviewDFX::MemoryUtil::DisableThreadCache()";
        "OHOS::HiviewDFX::MemoryUtil::DisableDelayFree()";
        "OHOS::HiviewDFX::Pipeline::RemoveProcessor(std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::StringUtil::StrToInt(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, int&)";
        "OHOS::HiviewDFX::StringUtil::TrimStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, char)";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, char)";
        "OHOS::HiviewDFX::StringUtil::EraseString(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::StringUtil::VectorToString(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> >, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > > > const&, bool, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char> > const&)";
        "OHOS::HiviewDFX::TimeUtil::GetNanoTime()";
        vtable?for?OHOS::HiviewDFX::PluginProxy;
        vtable?for?OHOS::HiviewDFX::Audit;
        vtable?for?OHOS::HiviewDFX::EventSource;
        vtable?for?OHOS::HiviewDFX::SysEvent;
        vtable?for?OHOS::HiviewDFX::PipelineEvent;
        vtable?for?OHOS::HiviewDFX::PipelineEvent;
        vtable?for?OHOS::HiviewDFX::PluginStatsEventFactory;
        vtable?for?OHOS::HiviewDFX::LoggerEvent;
        vtable?for?OHOS::HiviewDFX::Plugin;
    };
  local:
    *;
};