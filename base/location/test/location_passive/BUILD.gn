# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

SUBSYSTEM_DIR = "//base/location/services"
module_output_path = "location/service"

ohos_unittest("PassiveAbilityTest") {
  module_out_path = module_output_path
  sources = [
    "//base/location/test/location_passive/source/passive_ability_stub_test.cpp",
    "//base/location/test/location_passive/source/passive_ability_test.cpp",
  ]

  include_dirs = [
    "//base/location/interfaces/inner_api/include",
    "//base/location/test/location_passive/include",
    "//base/location/test/location_passive/mock/include",
    "$SUBSYSTEM_DIR/location_locator/locator/include",
    "$SUBSYSTEM_DIR/location_passive/passive/include",
  ]

  deps = [
    "$SUBSYSTEM_DIR/location_locator/locator:lbsservice_locator",
    "$SUBSYSTEM_DIR/location_passive/passive:lbsservice_passive",
    "//base/location/frameworks/location_common/common:lbsservice_common",
    "//base/location/frameworks/native:locator_sdk",
    "//base/security/access_token/interfaces/innerkits/nativetoken:libnativetoken",
    "//base/security/access_token/interfaces/innerkits/token_setproc:libtoken_setproc",
    "//base/startup/init/interfaces/innerkits:libbegetutil",
    "//foundation/arkui/napi:ace_napi",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hisysevent_native:libhisysevent",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
  ]

  module_out_path = module_output_path
}

group("unittest") {
  testonly = true
  deps = []

  deps += [ ":PassiveAbilityTest" ]
}
