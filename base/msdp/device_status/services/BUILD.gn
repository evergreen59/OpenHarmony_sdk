# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/msdp/device_status/device_status.gni")
import("//foundation/distributeddatamgr/relational_store/relational_store.gni")

config("devicestatus_private_config") {
  include_dirs = [ "//utils/system/safwk/native/include" ]
}

config("devicestatus_srv_public_config") {
  include_dirs = [
    "native/include",
    "${device_status_interfaces_path}/innerkits/include",
    "//foundation/distributedhardware/device_manager/interfaces/inner_kits/native_cpp/include/",
    "//base/msdp/device_status/libs/interface",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/",
    "${relational_store_innerapi_path}/appdatafwk/include/",
  ]
}

ohos_shared_library("devicestatus_service") {
  sources = [
    "native/src/devicestatus_dumper.cpp",
    "native/src/devicestatus_manager.cpp",
    "native/src/devicestatus_msdp_client_impl.cpp",
    "native/src/devicestatus_service.cpp",
    "native/src/devicestatus_srv_stub.cpp",
    "native/src/devicestatus_callback_proxy.cpp",
  ]

  configs = [
    "${device_status_utils_path}:devicestatus_utils_config",
    ":devicestatus_private_config",
  ]

  public_configs = [ ":devicestatus_srv_public_config" ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "//drivers/peripheral/sensor/hal:hdi_sensor",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
  ]

  part_name = "${device_status_part_name}"
}
