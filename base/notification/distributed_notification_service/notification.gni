# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ability_runtime_path = "//foundation/ability/ability_runtime"
ability_runtime_inner_api_path = "${ability_runtime_path}/interfaces/inner_api"
ability_runtime_services_path = "${ability_runtime_path}/services"
ability_runtime_kits_path = "${ability_runtime_path}/frameworks/kits"
ability_runtime_napi_path = "${ability_runtime_path}/frameworks/js/napi"
component_name = "distributed_notification_service"
component_path = "//base/notification/distributed_notification_service"
services_path = "${component_path}/services"
frameworks_path = "${component_path}/frameworks"
frameworks_module_ans_path = "${frameworks_path}/ans"
interfaces_path = "${component_path}/interfaces"
inner_api_path = "${interfaces_path}/inner_api"
core_path = "${frameworks_path}/core"
test_path = "${component_path}/test"
tools_path = "${component_path}/tools"
distributed_notification_supported = true
subsystem_name = "notification"
component_external_deps = [
  "ability_base:base",
  "ability_base:want",
  "ability_base:zuri",
  "bundle_framework:appexecfwk_base",
  "bundle_framework:appexecfwk_core",
  "common_event_service:cesfwk_innerkits",
  "eventhandler:libeventhandler",
  "hiviewdfx_hilog_native:libhilog",
  "ipc:ipc_core",
  "safwk:system_ability_fwk",
  "samgr:samgr_proxy",
]

declare_args() {
  device_usage = true
  hisysevent_usage = true

  if (defined(global_parts_info) &&
      !defined(global_parts_info.resourceschedule_device_usage_statistics)) {
    device_usage = false
  }

  if (defined(global_parts_info) &&
      !defined(global_parts_info.hiviewdfx_hisysevent_native)) {
    hisysevent_usage = false
  }

  print("hisysevent_usage = " + "$hisysevent_usage")
}
