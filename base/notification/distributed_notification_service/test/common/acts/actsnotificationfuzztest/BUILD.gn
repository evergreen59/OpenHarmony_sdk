# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/test.gni")

module_output_path = "${component_name}/systemtest"

ohos_systemtest("ActsNotificationFuzzTest") {
  module_out_path = module_output_path
  resource_config_file =
      "${component_path}/test/resource/notificationfuzztest/ohos_test.xml"

  sources = [
    "${component_path}/test/resource/notificationfuzztest/src/notificationfuzztestmanager.cpp",
    "${component_path}/test/resource/notificationfuzztest/src/notificationgetparam.cpp",
    "actsnotificationfuzztest.cpp",
  ]

  configs = [ "${component_path}/test/common/acts:ansfwk_kits_test_config" ]

  include_dirs = [
    "${ability_runtime_inner_api_path}/ability_manager/include",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_kits_path}/app/native/app/include/task",
    "${ability_runtime_services_path}/abilitymgr/include",
    "${core_path}/include",
    "${inner_api_path}",
    "${services_path}/ans/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
    "//third_party/json/single_include",
    "//commonlibrary/c_utils/base/include",
  ]

  cflags = []

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${ability_runtime_path}/frameworks/native/appkit:appkit_native",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
    "${core_path}:ans_core",
    "${frameworks_module_ans_path}:ans_innerkits",
    "${services_path}/ans:ans_targets",
    "//base/global/resource_management/frameworks/resmgr:global_resmgr",
    "//foundation/multimodalinput/input/frameworks/proxy:libmmi-client",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_image_framework:image_native",
    "relational_store:native_appdatafwk",
    "relational_store:native_dataability",
    "relational_store:native_rdb",
    "samgr:samgr_proxy",
  ]
}

group("actsnotificationfuzztest") {
  testonly = true

  deps = [ ":ActsNotificationFuzzTest" ]
}
