# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/powermgr/battery_statistics/batterystats.gni")

config("batterystats_private_config") {
  include_dirs = [
    "//base/hiviewdfx/hicollie/interfaces/native/innerkits/include/xcollie",
    "//base/telephony/call_manager/interfaces/innerkits",
    "//foundation/communication/bluetooth/services/bluetooth/common/",
    "//foundation/communication/wifi/wifi/utils/inc",
    "//base/powermgr/display_manager/interfaces/innerkits/native/include",
  ]
}

config("batterystats_public_config") {
  include_dirs = [
    "native/include",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app",
    "${batterystats_service_zidl}/include",
  ]
}

ohos_shared_library("batterystats_service") {
  sources = [
    "native/src/battery_stats_core.cpp",
    "native/src/battery_stats_detector.cpp",
    "native/src/battery_stats_dumper.cpp",
    "native/src/battery_stats_listener.cpp",
    "native/src/battery_stats_parser.cpp",
    "native/src/battery_stats_service.cpp",
    "native/src/battery_stats_subscriber.cpp",
    "native/src/cpu_time_reader.cpp",
    "native/src/entities/alarm_entity.cpp",
    "native/src/entities/audio_entity.cpp",
    "native/src/entities/battery_stats_entity.cpp",
    "native/src/entities/bluetooth_entity.cpp",
    "native/src/entities/camera_entity.cpp",
    "native/src/entities/cpu_entity.cpp",
    "native/src/entities/flashlight_entity.cpp",
    "native/src/entities/gnss_entity.cpp",
    "native/src/entities/idle_entity.cpp",
    "native/src/entities/phone_entity.cpp",
    "native/src/entities/screen_entity.cpp",
    "native/src/entities/sensor_entity.cpp",
    "native/src/entities/uid_entity.cpp",
    "native/src/entities/user_entity.cpp",
    "native/src/entities/wakelock_entity.cpp",
    "native/src/entities/wifi_entity.cpp",
  ]

  configs = [
    "${batterystats_utils_path}:batterystats_utils_config",
    ":batterystats_private_config",
  ]

  public_configs = [ ":batterystats_public_config" ]

  deps = [
    ":batterystats_stub",
    "${batterystats_innerkits}:batterystats_client",
    "${batterystats_utils_path}:batterystats_utils",
    "//base/powermgr/power_manager/utils/permission:power_permission",
    "//third_party/jsoncpp",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:abilitykit_native",
    "battery_manager:batterysrv_client",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hicollie_native:libhicollie",
    "hisysevent_native:libhisyseventmanager",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "os_account:libaccountkits",
    "safwk:system_ability_fwk",
  ]

  part_name = "${batterystats_part_name}"
}

ohos_shared_library("batterystats_stub") {
  sources = [ "${batterystats_service_zidl}/src/battery_stats_stub.cpp" ]

  configs = [
    "${batterystats_utils_path}:batterystats_utils_config",
    ":batterystats_private_config",
  ]

  public_configs = [ ":batterystats_public_config" ]

  external_deps = [
    "c_utils:utils",
    "hicollie_native:libhicollie",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]

  part_name = "${batterystats_part_name}"
}

group("service") {
  deps = [
    ":batterystats_service",
    ":batterystats_stub",
    "profile:power_average.json",
  ]
}
