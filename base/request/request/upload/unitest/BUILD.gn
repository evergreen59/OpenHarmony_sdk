# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/request/request/request_aafwk.gni")

#import("//base/request/request/upload/upload.gni")
import("//build/ohos.gni")
import("//build/test.gni")
module_output_path = "request/upload_service"

ohos_unittest("upload_obtain_file_UT_test") {
  module_out_path = module_output_path

  sources = [
    "//base/request/request/upload/frameworks/libs/src/file_adapter.cpp",
    "//base/request/request/upload/frameworks/libs/src/obtain_file.cpp",
    "src/mock_obtain_file.cpp",
    "src/obtain_file_test.cpp",
  ]

  include_dirs = [
    "include",
    "//third_party/curl/include",
    "//base/request/request/upload/frameworks/libs/include",
    "//third_party/googletest/googlemock/include",
  ]

  deps = [
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${ability_runtime_path}/frameworks/native/ability/native:data_ability_helper",
    "//base/request/request/upload/frameworks/libs/:upload_lib",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
  ]
}

ohos_unittest("upload_UT_test") {
  module_out_path = module_output_path

  sources = [
    "//base/request/request/upload/frameworks/libs/src/curl_adp.cpp",
    "src/upload_test.cpp",
  ]

  include_dirs = [
    "include",
    "//base/request/request/upload/frameworks/libs/include",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/arkui/napi/interfaces/kits",
    "//third_party/json/single_include",
    "//third_party/node/src",
    "//utils/system/safwk/native/include",
    "//foundation/communication/dsoftbus/interfaces/kits/transport",
    "//foundation/communication/dsoftbus/interfaces/kits/common",
    "//foundation/communication/dsoftbus/interfaces/kits/bus_center",
    "//third_party/json/include",
    "${ability_runtime_inner_api_path}/ability_manager/include",
    "//third_party/curl/include",
  ]

  deps = [
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${ability_runtime_path}/frameworks/native/appkit:app_context",
    "//base/request/request/upload/frameworks/libs/:upload_lib",
    "//third_party/curl/:curl",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:napi_base_context",
    "ability_runtime:runtime",
    "c_utils:utils",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "relational_store:native_appdatafwk",
    "relational_store:native_dataability",
    "relational_store:native_rdb",
  ]
}
