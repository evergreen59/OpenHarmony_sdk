# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/access_token/access_token.gni")
import("//build/test.gni")

ohos_unittest("libaccesstoken_manager_service_standard_test") {
  subsystem_name = "security"
  part_name = "access_token"
  module_out_path = part_name + "/" + part_name

  include_dirs = [
    "//base/security/access_token/frameworks/accesstoken/include",
    "//base/security/access_token/frameworks/common/include",
    "//base/security/access_token/frameworks/tokensync/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/main/cpp/include",
    "//base/security/access_token/interfaces/innerkits/nativetoken/include",
    "//base/security/access_token/interfaces/innerkits/tokensync/src",
    "//base/security/access_token/services/accesstokenmanager/main/cpp/include/callback",
    "//base/security/access_token/services/accesstokenmanager/main/cpp/include/database",
    "//base/security/access_token/services/accesstokenmanager/main/cpp/include/device",
    "//base/security/access_token/services/accesstokenmanager/main/cpp/include/permission",
    "//base/security/access_token/services/accesstokenmanager/main/cpp/include/service",
    "//base/security/access_token/services/accesstokenmanager/main/cpp/include/token",
    "//base/security/access_token/services/common/database/include",
    "//commonlibrary/c_utils/base/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/distributedhardware/device_manager/interfaces/inner_kits/native_cpp/include",
    "//third_party/googletest/include",
    "//third_party/json/include",
  ]

  sources = [
    "unittest/cpp/src/accesstoken_info_manager_test.cpp",
    "unittest/cpp/src/native_token_receptor_test.cpp",
    "unittest/cpp/src/permission_grant_event_test.cpp",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]

  if (dlp_permission_enable == true) {
    cflags_cc += [ "-DSUPPORT_SANDBOX_APP" ]
  }

  configs = [ "//base/security/access_token/config:coverage_flags" ]

  if (token_sync_enable == true) {
    cflags_cc += [ "-DTOKEN_SYNC_ENABLE" ]
  }

  deps = [
    "//base/security/access_token/frameworks/accesstoken:accesstoken_communication_adapter_cxx",
    "//base/security/access_token/interfaces/innerkits/accesstoken:libaccesstoken_sdk",
    "//base/security/access_token/interfaces/innerkits/nativetoken:libnativetoken",
    "//base/security/access_token/interfaces/innerkits/tokensync:libtokensync_sdk",
    "//base/security/access_token/services/accesstokenmanager:accesstoken_manager_service",
    "//base/security/access_token/services/common/database:accesstoken_database_cxx",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":libaccesstoken_manager_service_standard_test" ]
}
