# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/access_token/access_token.gni")
import("//build/test.gni")

ohos_unittest("libtoken_sync_service_sdk_test") {
  subsystem_name = "security"
  part_name = "access_token"
  module_out_path = part_name + "/" + part_name

  sources = [
    #"//base/security/access_token/services/tokensyncmanager/src/common/constant.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/command/base_remote_command.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/command/delete_remote_token_command.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/command/sync_remote_hap_token_command.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/command/sync_remote_native_token_command.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/command/update_remote_hap_token_command.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/device/device_info_manager.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/device/device_info_repository.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/remote/remote_command_executor.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/remote/remote_command_factory.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/remote/remote_command_manager.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/remote/soft_bus_channel.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/remote/soft_bus_device_connection_listener.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/remote/soft_bus_manager.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/remote/soft_bus_session_listener.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/service/token_sync_event_handler.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/service/token_sync_manager_service.cpp",
    "//base/security/access_token/services/tokensyncmanager/src/service/token_sync_manager_stub.cpp",
    "//base/security/access_token/services/tokensyncmanager/test/mock/src/constant_mock.cpp",
    "//base/security/access_token/services/tokensyncmanager/test/mock/src/soft_bus_center_mock.cpp",
    "//base/security/access_token/services/tokensyncmanager/test/mock/src/soft_bus_session_mock.cpp",

    #"//base/security/access_token/services/tokensyncmanager/test/mock/src/mock_parameter.c",
    "//base/security/access_token/services/tokensyncmanager/test/unittest/token_sync_service/token_sync_service_test.cpp",
  ]

  include_dirs = [
    "//commonlibrary/c_utils/base/include",
    "//third_party/googletest/include",
    "//base/security/access_token/services/tokensyncmanager/include/service",
    "//base/security/access_token/services/tokensyncmanager/include/remote",
    "//base/security/access_token/services/tokensyncmanager/include/command",
    "//base/security/access_token/services/tokensyncmanager/include/common",
    "//base/security/access_token/services/tokensyncmanager/include/device",
    "//base/security/access_token/services/tokensyncmanager/include/protocol",
    "//base/security/access_token/services/tokensyncmanager/test/mock/include",
    "//third_party/json/include",
    "//base/security/access_token/frameworks/common/include",
    "//base/security/access_token/frameworks/accesstoken/include",
    "//base/security/access_token/frameworks/tokensync/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "//base/security/access_token/interfaces/innerkits/nativetoken/include",
    "//base/security/access_token/frameworks/common/include",
    "//foundation/communication/dsoftbus/interfaces/kits/transport",
    "//foundation/communication/dsoftbus/interfaces/kits/common",
    "//foundation/communication/dsoftbus/interfaces/kits/bus_center",
    "//foundation/distributedhardware/device_manager/interfaces/inner_kits/native_cpp/include",
    "//base/security/access_token/interfaces/innerkits/token_setproc/include",
  ]

  deps = [
    "//base/security/access_token/frameworks/accesstoken:accesstoken_communication_adapter_cxx",
    "//base/security/access_token/frameworks/common:accesstoken_common_cxx",
    "//base/security/access_token/interfaces/innerkits/accesstoken:libaccesstoken_sdk",
    "//base/security/access_token/interfaces/innerkits/token_setproc:libtoken_setproc",
    "//foundation/distributedhardware/device_manager/interfaces/inner_kits/native_cpp:devicemanagersdk",
    "//third_party/zlib:libz",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]

  if (token_sync_enable == true) {
    cflags_cc += [ "-DTOKEN_SYNC_ENABLE" ]
  }

  configs = [ "//base/security/access_token/config:coverage_flags" ]

  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":libtoken_sync_service_sdk_test" ]
}
