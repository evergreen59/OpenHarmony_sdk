# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow hdf_devmgr a2dp_host:binder { call transfer };
allow hdf_devmgr a2dp_host:dir { search };
allow hdf_devmgr a2dp_host:file { open read };
allow hdf_devmgr a2dp_host:process { getattr };
allow hdf_devmgr audio_hdi_server_host:binder { call transfer };
allow hdf_devmgr audio_hdi_server_host:dir { search };
allow hdf_devmgr audio_hdi_server_host:file { open read };
allow hdf_devmgr audio_hdi_server_host:process { getattr };
allow hdf_devmgr blue_host:binder { call transfer };
allow hdf_devmgr blue_host:dir { search };
allow hdf_devmgr blue_host:file { open read };
allow hdf_devmgr blue_host:process { getattr };
allow hdf_devmgr bluetooth_service:binder { transfer };
allow hdf_devmgr bluetooth_service:dir { search };
allow hdf_devmgr bluetooth_service:file { open read };
allow hdf_devmgr bluetooth_service:process { getattr };
allow hdf_devmgr bootevent_param:file { map open read };
allow hdf_devmgr bootevent_samgr_param:file { map open read };
allow hdf_devmgr build_version_param:file { map open read };
allow hdf_devmgr camera_host:binder { transfer };
allow hdf_devmgr camera_host:dir { search };
allow hdf_devmgr camera_host:file { open read };
allow hdf_devmgr camera_host:process { getattr };
allow hdf_devmgr camera_service:binder { call transfer };
allow hdf_devmgr camera_service:dir { search };
allow hdf_devmgr camera_service:file { open read };
allow hdf_devmgr camera_service:process { getattr };
allow hdf_devmgr codec_host:binder { call transfer };
allow hdf_devmgr codec_host:dir { search };
allow hdf_devmgr codec_host:file { open read };
allow hdf_devmgr codec_host:process { getattr };
allow hdf_devmgr const_allow_mock_param:file { map open read };
allow hdf_devmgr const_allow_param:file { map open read };
allow hdf_devmgr const_build_param:file { map open read };
allow hdf_devmgr const_display_brightness_param:file { map open read };
allow hdf_devmgr const_param:file { map open read };
allow hdf_devmgr const_postinstall_fstab_param:file { map open read };
allow hdf_devmgr const_postinstall_param:file { map open read };
allow hdf_devmgr const_product_param:file { map open read };
allow hdf_devmgr dcamera:binder { call transfer };
allow hdf_devmgr dcamera:dir { search };
allow hdf_devmgr dcamera:file { open read };
allow hdf_devmgr dcamera_host:binder { call transfer };
allow hdf_devmgr dcamera_host:dir { search };
allow hdf_devmgr dcamera_host:file { open read };
allow hdf_devmgr dcamera_host:process { getattr };
allow hdf_devmgr dcamera:process { getattr };
allow hdf_devmgr debug_param:file { map open read };
allow hdf_devmgr default_param:file { map open read };
allow hdf_devmgr dev_hdf_kevent:chr_file { getattr ioctl open read write };
allow hdf_devmgr dev_kmsg_file:chr_file { open write };
allow hdf_devmgr dev_unix_socket:dir { search };
allow hdf_devmgr disp_gralloc_host:binder { call transfer };
allow hdf_devmgr disp_gralloc_host:dir { search };
allow hdf_devmgr disp_gralloc_host:file { open read };
allow hdf_devmgr disp_gralloc_host:process { getattr };
allow hdf_devmgr distributedsche_param:file { map open read };
allow hdf_devmgr face_auth_host:binder { call transfer };
allow hdf_devmgr face_auth_host:dir { search };
allow hdf_devmgr face_auth_host:file { open read };
allow hdf_devmgr face_auth_host:process { getattr };
allow hdf_devmgr fingerprint_auth_host:binder { call transfer };
allow hdf_devmgr fingerprint_auth_host:dir { search };
allow hdf_devmgr fingerprint_auth_host:file { open read };
allow hdf_devmgr fingerprint_auth_host:process { getattr };
allow hdf_devmgr foundation:binder { call transfer };
allow hdf_devmgr foundation:dir { search };
allow hdf_devmgr foundation:file { open read };
allow hdf_devmgr foundation:process { getattr };
allow hdf_devmgr hilog_param:file { map open read };
allow hdf_devmgr hw_sc_build_os_param:file { map open read };
allow hdf_devmgr hw_sc_build_param:file { map open read };
allow hdf_devmgr hw_sc_param:file { map open read };
allow hdf_devmgr init_param:file { map open read };
allow hdf_devmgr init_svc_param:file { map open read };
allow hdf_devmgr input_pointer_device_param:file { map open read };
allow hdf_devmgr input_user_host:binder { call transfer };
allow hdf_devmgr input_user_host:dir { search };
allow hdf_devmgr input_user_host:file { open read };
allow hdf_devmgr input_user_host:process { getattr };
allow hdf_devmgr kernel:unix_stream_socket { connectto };
allow hdf_devmgr light_host:binder { call transfer };
allow hdf_devmgr light_host:dir { search };
allow hdf_devmgr light_host:file { open read };
allow hdf_devmgr light_host:process { getattr };
allow hdf_devmgr location_host:binder { call transfer };
allow hdf_devmgr location_host:dir { search };
allow hdf_devmgr location_host:file { open read };
allow hdf_devmgr location_host:process { getattr };
allow hdf_devmgr locationhub:binder { transfer };
allow hdf_devmgr locationhub:dir { search };
allow hdf_devmgr locationhub:file { open read };
allow hdf_devmgr locationhub:process { getattr };
allow hdf_devmgr media_service:binder { transfer };
allow hdf_devmgr media_service:dir { search };
allow hdf_devmgr media_service:file { open read };
allow hdf_devmgr media_service:process { getattr };
allow hdf_devmgr multimodalinput:binder { transfer };
allow hdf_devmgr multimodalinput:dir { search };
allow hdf_devmgr multimodalinput:file { open read };
allow hdf_devmgr multimodalinput:process { getattr };
allow hdf_devmgr net_param:file { map open read };
allow hdf_devmgr net_tcp_param:file { map open read };
allow hdf_devmgr normal_hap:binder { transfer };
allow hdf_devmgr normal_hap:dir { search };
allow hdf_devmgr normal_hap:file { open read };
allow hdf_devmgr normal_hap:process { getattr };
allow hdf_devmgr ohos_boot_param:file { map open read };
allow hdf_devmgr ohos_param:file { map open read };
allow hdf_devmgr ohos_param:parameter_service { set };
allow hdf_devmgr paramservice_socket:sock_file { write };
allow hdf_devmgr persist_param:file { map open read };
allow hdf_devmgr persist_sys_param:file { map open read };
allow hdf_devmgr pinauth:binder { call transfer };
allow hdf_devmgr pinauth:dir { search };
allow hdf_devmgr pinauth:file { open read };
allow hdf_devmgr pin_auth_host:binder { call transfer };
allow hdf_devmgr pin_auth_host:dir { search };
allow hdf_devmgr pin_auth_host:file { open read };
allow hdf_devmgr pin_auth_host:process { getattr };
allow hdf_devmgr pinauth:process { getattr };
allow hdf_devmgr power_host:binder { transfer };
allow hdf_devmgr power_host:dir { search };
allow hdf_devmgr power_host:file { open read };
allow hdf_devmgr power_host:process { getattr };
allow hdf_devmgr sa_device_service_manager:samgr_class { add };
allow hdf_devmgr security_param:file { map open read };
allow hdf_devmgr selinuxfs:dir { open read };
allow hdf_devmgr selinuxfs:file { map };
allow hdf_devmgr sensor_host:binder { call transfer };
allow hdf_devmgr sensor_host:dir { search };
allow hdf_devmgr sensor_host:file { open read };
allow hdf_devmgr sensor_host:process { getattr };
allow hdf_devmgr sensors:binder { transfer };
allow hdf_devmgr sensors:dir { search };
allow hdf_devmgr sensors:file { open read };
allow hdf_devmgr sensors:process { getattr };
allow hdf_devmgr startup_param:file { map open read };
allow hdf_devmgr sys_param:file { map open read };
allow hdf_devmgr system_bin_file:dir { search };
allow hdf_devmgr system_core_hap:binder { transfer };
allow hdf_devmgr system_core_hap:dir { search };
allow hdf_devmgr system_core_hap:file { open read };
allow hdf_devmgr system_core_hap:process { getattr };
allow hdf_devmgr sys_usb_param:file { map open read };
allow hdf_devmgr usb_host:binder { call transfer };
allow hdf_devmgr usb_host:dir { search };
allow hdf_devmgr usb_host:file { open read };
allow hdf_devmgr usb_host:process { getattr };
allow hdf_devmgr usb_service:binder { transfer };
allow hdf_devmgr usb_service:dir { search };
allow hdf_devmgr usb_service:file { open read };
allow hdf_devmgr usb_service:process { getattr };
allow hdf_devmgr user_auth_host:binder { call transfer };
allow hdf_devmgr user_auth_host:dir { search };
allow hdf_devmgr user_auth_host:file { open read };
allow hdf_devmgr user_auth_host:process { getattr };
allow hdf_devmgr useriam:binder { transfer call };
allow hdf_devmgr useriam:dir { search };
allow hdf_devmgr useriam:file { open read };
allow hdf_devmgr useriam:process { getattr };
allow hdf_devmgr vendor_etc_file:dir { search };
allow hdf_devmgr vendor_etc_file:file { getattr open read };
allow hdf_devmgr vibrator_host:binder { call transfer };
allow hdf_devmgr vibrator_host:dir { search };
allow hdf_devmgr vibrator_host:file { open read };
allow hdf_devmgr vibrator_host:process { getattr };
allow hdf_devmgr wifi_host:binder { call transfer };
allow hdf_devmgr wifi_host:dir { search };
allow hdf_devmgr wifi_host:file { open read };
allow hdf_devmgr wifi_host:process { getattr };
allow hdf_devmgr telephony_sa:binder { call };
allowxperm hdf_devmgr dev_hdf_kevent:chr_file ioctl { 0x6203 };
