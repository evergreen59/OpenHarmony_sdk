# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow softbus_server accesstoken_service:binder { call };
allow softbus_server accountmgr:binder { call };
allow softbus_server bluetooth_service:binder { call transfer };
allow softbus_server bootevent_param:file { map open read };
allow softbus_server bootevent_samgr_param:file { map open read };
allow softbus_server build_version_param:file { map open read };
allow softbus_server const_allow_mock_param:file { map open read };
allow softbus_server const_allow_param:file { map open read };
allow softbus_server const_build_param:file { map open read };
allow softbus_server const_display_brightness_param:file { map open read };
allow softbus_server const_param:file { map open read };
allow softbus_server const_postinstall_fstab_param:file { map open read };
allow softbus_server const_postinstall_param:file { map open read };
allow softbus_server const_product_param:file { map open read };
allow softbus_server data_file:dir { search };
allow softbus_server data_log:file { read write };
allow softbus_server data_service_el1_file:dir { add_name search write };
allow softbus_server data_service_el1_file:file { create read write open };
allow softbus_server data_service_file:dir { search };
allow softbus_server debug_param:file { map open read };
allow softbus_server default_param:file { map open read };
allow softbus_server dev_file:sock_file { write };
allow softbus_server deviceauth_service:binder { call transfer };
allow softbus_server dev_unix_socket:dir { search };
allow softbus_server dev_unix_socket:sock_file { write };
allow softbus_server dhardware:binder { call };
allow softbus_server distributeddata:binder { call };
allow softbus_server distributedfiledaemon:binder { call };
allow softbus_server distributedsche:binder { call };
allow softbus_server distributedsche_param:file { map open read };
allow softbus_server dslm_service:binder { call };
allow softbus_server faultloggerd:fd { use };
allow softbus_server faultloggerd:unix_stream_socket { connectto };
allow softbus_server foundation:binder { call transfer };
allow softbus_server hilog_param:file { map open read };
allow softbus_server hiview:binder { call };
allow softbus_server huks_service:binder { call };
allow softbus_server hw_sc_build_os_param:file { map open read };
allow softbus_server hw_sc_build_param:file { map open read };
allow softbus_server hw_sc_param:file { map open read };
allow softbus_server init_param:file { map open read };
allow softbus_server init_svc_param:file { map open read };
allow softbus_server input_pointer_device_param:file { map open read };
allow softbus_server net_param:file { map open read };
allow softbus_server netsysnative:unix_stream_socket { connectto };
allow softbus_server net_tcp_param:file { map open read };
allow softbus_server node:tcp_socket { node_bind };
allow softbus_server node:udp_socket { node_bind };
allow softbus_server ohos_boot_param:file { map open read };
allow softbus_server ohos_param:file { map open read };
allow softbus_server param_watcher:binder { call transfer };
allow softbus_server persist_param:file { map open read };
allow softbus_server persist_sys_param:file { map open read };
allow softbus_server port:tcp_socket { name_connect };
allow softbus_server port:udp_socket { name_bind };
allow softbus_server sa_accesstoken_manager_service:samgr_class { get };
allow softbus_server sa_accountmgr:samgr_class { get };
allow softbus_server sa_bluetooth_server:samgr_class { get };
allow softbus_server sa_device_auth_service:samgr_class { get };
allow softbus_server sa_huks_service:samgr_class { get };
allow softbus_server sa_param_watcher:samgr_class { get };
allow softbus_server sa_softbus_service:samgr_class { add get };
allow softbus_server sa_wifi_device_ability:samgr_class { get };
allow softbus_server sa_wifi_hotspot_ability:samgr_class { get };
allow softbus_server sa_wifi_p2p_ability:samgr_class { get };
allow softbus_server sa_wifi_scan_ability:samgr_class { get };
allow softbus_server security_param:file { map open read };
allow softbus_server softbus_server:netlink_route_socket { bind create nlmsg_read read setopt write };
allow softbus_server softbus_server:tcp_socket { accept bind connect create getattr listen read setopt shutdown write };
allow softbus_server softbus_server:udp_socket { bind connect create getattr ioctl read setopt write };
allow softbus_server softbus_server:unix_dgram_socket { getopt ioctl setopt };
allow softbus_server startup_param:file { map open read };
allow softbus_server sys_param:file { map open read };
allow softbus_server system_basic_hap:binder { call transfer };
allow softbus_server system_basic_hap:fd { use };
allow softbus_server system_bin_file:dir { search };
allow softbus_server system_bin_file:file { execute execute_no_trans map read read open };
allow softbus_server system_usr_file:dir { search };
allow softbus_server system_usr_file:file { getattr map open read };
allow softbus_server sys_usb_param:file { map open read };
allow softbus_server token_sync_service:binder { call };
allow softbus_server tracefs:dir { search };
allow softbus_server tracefs_trace_marker_file:file { open write };
allow softbus_server wifi_manager_service:binder { call transfer };
allow softbus_server kernel:system { module_request };
allow softbus_server softbus_server:capability { net_admin };
allowxperm softbus_server softbus_server:udp_socket ioctl { 0x8912 0x8913 0x8915 0x8919 0x8927 };
allowxperm softbus_server softbus_server:unix_dgram_socket ioctl { 0x8910 };
