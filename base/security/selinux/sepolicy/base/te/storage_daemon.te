# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow storage_daemon accesstoken_service:binder { call };
allow storage_daemon bootevent_param:file { map open read };
allow storage_daemon bootevent_samgr_param:file { map open read };
allow storage_daemon build_version_param:file { map open read };
allow storage_daemon const_allow_mock_param:file { map open read };
allow storage_daemon const_allow_param:file { map open read };
allow storage_daemon const_build_param:file { map open read };
allow storage_daemon const_display_brightness_param:file { map open read };
allow storage_daemon const_param:file { map open read };
allow storage_daemon const_postinstall_fstab_param:file { map open read };
allow storage_daemon const_postinstall_param:file { map open read };
allow storage_daemon const_product_param:file { map open read };
allow storage_daemon data_app_el1_file:dir { add_name create getattr open read search setattr write };
allow storage_daemon data_app_el2_file:dir { add_name create getattr open read search setattr write };
allow storage_daemon data_app_file:dir { search };
allow storage_daemon data_chipset_el1_file:dir { add_name create getattr open read search setattr write };
allow storage_daemon data_chipset_el2_file:dir { add_name create getattr open read search setattr write };
allow storage_daemon data_chipset_file:dir { search };
allow storage_daemon data_file:dir { search };
allow storage_daemon data_service_el1_file:dir { add_name create getattr open read search setattr write };
allow storage_daemon data_service_el2_file:dir { add_name create getattr open read relabelfrom search setattr write };
allow storage_daemon data_service_el2_hmdfs:dir { add_name create getattr open read read open relabelto relabelfrom search setattr write };
allow storage_daemon data_service_el2_hmdfs:file { read read open write open };
allow storage_daemon data_service_file:dir { search };
allow storage_daemon data_user_file:dir { open read read open relabelto setattr };
allow storage_daemon debug_param:file { map open read };
allow storage_daemon default_param:file { map open read };
allow storage_daemon dev_unix_socket:dir { search };
allow storage_daemon distributedfiledaemon:fd { use };
allow storage_daemon distributedsche_param:file { map open read };
allow storage_daemon hilog_param:file { map open read };
allow storage_daemon hmdfs:dir { search };
allow storage_daemon hmdfs:filesystem { mount };
allow storage_daemon hw_sc_build_os_param:file { map open read };
allow storage_daemon hw_sc_build_param:file { map open read };
allow storage_daemon hw_sc_param:file { map open read };
allow storage_daemon init_param:file { map open read };
allow storage_daemon init_svc_param:file { map open read };
allow storage_daemon input_pointer_device_param:file { map open read };
allow storage_daemon net_param:file { map open read };
allow storage_daemon net_tcp_param:file { map open read };
allow storage_daemon ohos_boot_param:file { map open read };
allow storage_daemon ohos_param:file { map open read };
allow storage_daemon persist_param:file { map open read };
allow storage_daemon persist_sys_param:file { map open read };
allow storage_daemon sa_accesstoken_manager_service:samgr_class { get };
allow storage_daemon sa_storage_manager_daemon:samgr_class { add };
allow storage_daemon security_param:file { map open read };
allow storage_daemon startup_param:file { map open read };
allow storage_daemon storage_daemon:capability { chown dac_override dac_read_search fowner fsetid net_admin sys_admin };
allow storage_daemon storage_daemon_exec:file { entrypoint execute map read };
allow storage_daemon storage_daemon:netlink_kobject_uevent_socket { bind create read setopt };
allow storage_daemon sys_file:dir { open read };
allow storage_daemon sys_file:file { open write };
allow storage_daemon sysfs_block_file:dir { open read };
allow storage_daemon sysfs_block_file:file { open write };
allow storage_daemon sysfs_block_loop:dir { open read };
allow storage_daemon sysfs_block_loop:file { open write };
allow storage_daemon sysfs_block_zram:dir { open read };
allow storage_daemon sysfs_block_zram:file { open write };
allow storage_daemon sys_fs_hmdfs:file { setattr };
allow storage_daemon sys_param:file { map open read };
allow storage_daemon system_bin_file:dir { search };
allow storage_daemon system_bin_file:file { execute execute_no_trans map read open };
allow storage_daemon sys_usb_param:file { map open read };
allow storage_daemon tmpfs:dir { add_name create mounton open read setattr write };
