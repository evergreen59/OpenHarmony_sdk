# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type foundation, domain, sadomain;

#domain_auto_transition_pattern(init, samain_exec, foundation);
#allow init samain_exec:file execute_no_trans;

#binder_call(foundation, appspawn);
#binder_call(foundation, installs);
#binder_call(foundation, deviceauth_service);
#binder_call(foundation, samgr);
#binder_call(foundation, render_service);
#allow foundation hdf_devmgr:binder call;
#allow appspawn foundation:binder call;
#allow deviceauth_service foundation:binder call;

#allow foundation appspawn:unix_stream_socket connectto;

#allow foundation vendor_file:dir read_dir_perms;

#allow foundation foundation:{ udp_socket netlink_route_socket } { create ioctl setopt bind read };

#allow foundation init:unix_stream_socket connectto;

# "/system/profile/foundation.xml", O_RDONLY
#allow foundation system_file:file read_file_perms;

allow foundation multimodalinput:binder call;
allow foundation multimodalinput:unix_stream_socket write;

allow foundation accessibility:binder { call };
allow foundation accesstoken_service:binder { call };
allow foundation appspawn:unix_stream_socket { connectto };
allow foundation appspawn_socket:sock_file { write };
allow foundation bgtaskmgr_service:binder { call transfer };
allow foundation configfs:dir { search };
allow foundation configfs:file { open write };
allow foundation data_file:dir { getattr open read search };
allow foundation data_file:file { getattr map read open };
allow foundation data_app_el1_file:file { getattr map read };
allow foundation data_app_el2_file:file { getattr read };
allow foundation data_service_el1_file:dir { add_name remove_name search write };
allow foundation data_service_el1_file:file { create ioctl open unlink write write open };
allow foundation data_service_file:dir { search };
allow foundation data_system_ce:file { lock };
allow foundation dev_ashmem_file:chr_file { open };
allow foundation device_usage_stats_service:binder { call transfer };
allow foundation deviceauth_service:binder { call transfer };
allow foundation devinfo_private_param:file { map open read };
allow foundation dev_unix_socket:dir { search };
allow foundation dev_unix_socket:sock_file { write };
allow foundation dev_mali:chr_file { ioctl map read write };
allow foundation distributeddata:binder { call transfer };
allow foundation distributedfileservice:binder { call };
allow foundation distributedsche:binder { call };
allow foundation foundation:unix_dgram_socket { getopt setopt };
allow foundation hdf_devmgr:binder { call transfer };
allow foundation hiview:binder { transfer };
allow foundation huks_service:binder { call };
allow foundation inputmethod_service:binder { call };
allow foundation memmgrservice:binder { call };
allow foundation msdp_sa:binder { call };
allow foundation multimodalinput:unix_stream_socket { read };
allow foundation normal_hap:dir { search };
allow foundation normal_hap:file { getattr read };
allow foundation normal_hap:process { sigkill };
allow foundation ohos_param:parameter_service { set };
allow foundation persist_param:parameter_service { set };
allow foundation power_host:binder { call };
allow foundation proc_file:file { open read };
allow foundation render_service:binder { call transfer };
allow foundation resource_schedule_service:binder { call transfer };
allow foundation sa_accountmgr:samgr_class { get };
allow foundation sa_distributed_bundle_mgr_service_service:samgr_class { get };
allow foundation sa_distributeddata_service:samgr_class { get };
allow foundation sa_distributeschedule:samgr_class { get };
allow foundation sa_foundation_abilityms:samgr_class { add get };
allow foundation sa_foundation_ans:samgr_class { add };
allow foundation sa_foundation_appms:samgr_class { add get };
allow foundation sa_foundation_bms:samgr_class { add };
allow foundation sa_foundation_devicemanager_service:samgr_class { add };
allow foundation sa_foundation_tel_call_manager:samgr_class { add };
allow foundation sa_msdp_devicestatus_service:samgr_class { get };
allow foundation sa_multimodalinput_service:samgr_class { get };
allow foundation sa_param_watcher:samgr_class { get };
allow foundation sa_softbus_service:samgr_class { get };
allow foundation sa_telephony_tel_cellular_call:samgr_class { get };
allow foundation sa_time_service:samgr_class { get };
allow foundation screenlock_server:binder { call transfer };
allow foundation sensors:binder { call };
allow foundation sh:binder { call transfer };
allow foundation softbus_server:binder { call transfer };
allow foundation storage_manager:binder { call transfer };
allow foundation sys_file:dir { open read };
allow foundation sys_file:file { ioctl open read };
allow foundation system_basic_hap:binder { call };
allow foundation system_basic_hap:fd { use };
allow foundation system_core_hap:binder { call };
allow foundation system_core_hap:file { getattr read };
allow foundation system_core_hap:process { sigkill };
allow foundation system_file:file { getattr map open read };
allow foundation time_service:binder { call transfer };
allow foundation vendor_lib_file:dir { search };
allow foundation work_scheduler_service:binder { call };
allow foundation servicectrl_param:parameter_service { set };
allowxperm foundation data_service_el1_file:file ioctl { 0x5413 };
allowxperm foundation dev_mali:chr_file ioctl { 0x8002 0x8005 0x8006 0x8007 0x800e 0x800f 0x8011 0x8016 0x8019 0x801d 0x801e 0x8026 };
allowxperm foundation sys_file:file ioctl { 0x5413 };

