# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type distributedsche_param, parameter_attr;

#avc:  denied  { add } for service=1401 pid=406 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_1401_service:s0 tclass=samgr_class permissive=1
allow distributedsche sa_distributeschedule:samgr_class { add get_remote };
allow distributedsche sa_distributeddata_service:samgr_class { get };
allow distributedsche sa_softbus_service:samgr_class { get };
allow distributedsche sa_param_watcher:samgr_class { get };
allow distributedsche sa_accesstoken_manager_service:samgr_class { get };
allow distributedsche sa_foundation_bms:samgr_class { get };
allow distributedsche sa_accountmgr:samgr_class { get };
allow distributedsche sa_foundation_abilityms:samgr_class { get };
allow distributedsche accessibility_param:file { map open read };
allow distributedsche accesstoken_service:binder { call };
allow distributedsche accountmgr:binder { call };
allow distributedsche data_file:dir { search };
allow distributedsche data_service_file:dir { search };
allow distributedsche data_service_el1_file:dir { add_name open read search write getattr create remove_name rmdir };
allow distributedsche data_service_el1_file:file { create getattr ioctl open read write lock map unlink };
allow distributedsche deviceauth_service:binder { call };
allow distributedsche device_manager:binder { transfer };
allow distributedsche dev_ashmem_file:chr_file { open };
allow distributedsche dev_unix_socket:dir { search };
allow distributedsche distributeddata:binder { call transfer };
allow distributedsche distributedsche_param:parameter_service { set };
allow distributedsche distributedsche:unix_dgram_socket { getopt setopt };
allow distributedsche foundation:binder { call transfer };
allow distributedsche foundation:fd { use };
allow distributedsche kernel:unix_stream_socket { connectto };
allow distributedsche normal_hap:binder { call transfer };
allow distributedsche system_basic_hap:binder { call transfer };
allow distributedsche system_core_hap:binder { call transfer };
allow distributedsche paramservice_socket:sock_file { write };
allow distributedsche proc_cpuinfo_file:file { open read };
allow distributedsche proc_file:file { open read };
allow distributedsche sh:binder { call };
allow distributedsche softbus_server:binder { call transfer };
allow distributedsche softbus_server:fd { use };
allow distributedsche softbus_server:tcp_socket { read setopt shutdown write };

allow accountmgr distributedsche:binder { transfer };
allow init distributedsche:dir { search };
allow init distributedsche:file { open read };
allow init distributedsche:process { getattr };
allow sh distributedsche:binder { call transfer };
allow sh distributedsche:process { sigkill };
allow softbus_server distributedsche:binder { call };
allow distributedsche sa_foundation_devicemanager_service:samgr_class { get };
allow distributedsche devinfo_private_param:file { map open read};
allow distributedsche sa_form_mgr_service:samgr_class { get };

#avc:  denied  { get } for service=1903 pid=469 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_bgtaskmgr:s0 tclass=samgr_class permissive=1
allow distributedsche sa_bgtaskmgr:samgr_class { get };
#avc:  denied  { read open } for  pid=551 comm="foundation" scontext=u:r:foundation:s0 tcontext=u:r:distributedsche:s0 tclass=file permissive=1
allow foundation distributedsche:file { read open };
#avc:  denied  { search } for  pid=551 comm="foundation" name="469" dev="proc" ino=17886 scontext=u:r:foundation:s0 tcontext=u:r:distributedsche:s0 tclass=dir permissive=1
allow foundation distributedsche:dir { search };
#avc:  denied  { get } for service=1909 pid=560 scontext=u:r:distributedsche:s0 tcontext=u:object_r:sa_memory_manager_service:s0 tclass=samgr_class permissive=0
allow distributedsche sa_memory_manager_service:samgr_class { get };
#avc:  denied  { call } for  pid=479 comm="DmsComponentCha" scontext=u:r:distributedsche:s0 tcontext=u:r:memmgrservice:s0 tclass=binder permissive=0
allow distributedsche memmgrservice:binder { call };

neverallow {domain -samgr -distributedsche} sa_distributeschedule:samgr_class { get_remote };
