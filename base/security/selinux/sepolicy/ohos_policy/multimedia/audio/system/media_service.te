# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#avc:  denied  { call } for  pid=434 comm="wavparse0:sink" scontext=u:r:media_service:s0 tcontext=u:r:audio_policy:s0 tclass=binder permissive=1
#avc:  denied  { transfer } for  pid=434 comm="aqueue:src" scontext=u:r:media_service:s0 tcontext=u:r:audio_policy:s0 tclass=binder permissive=1
allow media_service audio_policy:binder { call transfer };

#avc:  denied  { getattr } for  pid=431 comm="threaded-ml" path="/data/data/.pulse_dir/state" dev="mmcblk0p11" ino=522248 scontext=u:r:media_service:s0 tcontext=u:object_r:data_data_pulse_dir:s0 tclass=dir permissive=1
#avc:  denied  { open } for  pid=431 comm="threaded-ml" path="/data/data/.pulse_dir/state" dev="mmcblk0p11" ino=522248 scontext=u:r:media_service:s0 tcontext=u:object_r:data_data_pulse_dir:s0 tclass=dir permissive=1
#avc:  denied  { read } for  pid=431 comm="threaded-ml" name="state" dev="mmcblk0p11" ino=522248 scontext=u:r:media_service:s0 tcontext=u:object_r:data_data_pulse_dir:s0 tclass=dir permissive=1
#avc:  denied  { search } for  pid=431 comm="threaded-ml" name=".pulse_dir" dev="mmcblk0p11" ino=522246 scontext=u:r:media_service:s0 tcontext=u:object_r:data_data_pulse_dir:s0 tclass=dir permissive=1
allow media_service data_data_pulse_dir:dir { getattr open read search };

#avc:  denied  { lock } for  pid=431 comm="threaded-ml" path="/data/data/.pulse_dir/state/cookie" dev="mmcblk0p11" ino=522251 scontext=u:r:media_service:s0 tcontext=u:object_r:data_data_pulse_dir:s0 tclass=file permissive=1
#avc:  denied  { open } for  pid=431 comm="threaded-ml" path="/data/data/.pulse_dir/state/cookie" dev="mmcblk0p11" ino=522251 scontext=u:r:media_service:s0 tcontext=u:object_r:data_data_pulse_dir:s0 tclass=file permissive=1
#avc:  denied  { read write } for  pid=431 comm="threaded-ml" name="cookie" dev="mmcblk0p11" ino=522251 scontext=u:r:media_service:s0 tcontext=u:object_r:data_data_pulse_dir:s0 tclass=file permissive=1
allow media_service data_data_pulse_dir:file { lock open read write };

#avc:  denied  { call } for  pid=434 comm="aqueue:src" scontext=u:r:media_service:s0 tcontext=u:r:pulseaudio:s0 tclass=binder permissive=1
allow media_service pulseaudio:binder { call };

#avc:  denied  { get } for service=3009 pid=512 scontext=u:r:media_service:s0 tcontext=u:object_r:sa_audio_policy_service:s0 tclass=samgr_class permissive=1
allow media_service sa_audio_policy_service:samgr_class { get };

#avc:  denied  { get } for service=3001 pid=512 scontext=u:r:media_service:s0 tcontext=u:object_r:sa_pulseaudio_audio_service:s0 tclass=samgr_class permissive=1
allow media_service sa_pulseaudio_audio_service:samgr_class { get };

#avc:  denied  { call } for  pid=501 comm="media_service" scontext=u:r:media_service:s0 tcontext=u:r:dcamera:s0 tclass=binder permissive=0
#avc:  denied  { transfer } for  pid=466 comm="media_service" scontext=u:r:media_service:s0 tcontext=u:r:dcamera:s0 tclass=binder permissive=0
allow media_service dcamera:binder { call transfer };

