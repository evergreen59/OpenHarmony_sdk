# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type privacy_service, sadomain, domain;
allow privacy_service accesstoken_data_file:dir { search add_name open read write remove_name };

allow privacy_service accesstoken_data_file:file { open read getattr ioctl lock write create unlink };

allow privacy_service data_file:dir { search };

allow privacy_service data_service_el1_file:dir { add_name getattr open read remove_name search write };
allow privacy_service data_service_el1_file:file { create getattr ioctl lock read write open unlink relabelfrom };
allow privacy_service data_service_file:dir { search };

allow privacy_service system_bin_file:dir { search };
  
allow privacy_service devinfo_private_param:file { map open read };

allow privacy_service dev_unix_socket:dir { search };

allow privacy_service ohos_param:file { map open read };
allow privacy_service ohos_boot_param:file { map open read };
allow privacy_service sys_param:file { map open read };
allow privacy_service sys_usb_param:file { map open read };
allow privacy_service net_tcp_param:file { map open read };
allow privacy_service net_param:file { map open read };
allow privacy_service hw_sc_build_param:file { map open read };
allow privacy_service hw_sc_build_os_param:file { map open read };
allow privacy_service hw_sc_param:file { map open read };
allow privacy_service init_param:file { map open read };
allow privacy_service init_svc_param:file { map open read };
allow privacy_service const_param:file { map open read };
allow privacy_service const_postinstall_fstab_param:file { map open read };
allow privacy_service const_postinstall_param:file { map open read };
allow privacy_service const_allow_param:file { map open read };
allow privacy_service const_allow_mock_param:file { map open read };
allow privacy_service const_build_param:file { map open read };
allow privacy_service const_display_brightness_param:file { map open read };
allow privacy_service const_product_param:file { map open read };
allow privacy_service security_param:file { map open read };
allow privacy_service startup_param:file { map open read };
allow privacy_service persist_param:file { map open read };
allow privacy_service persist_sys_param:file { map open read };
allow privacy_service hilog_param:file { map open read };
allow privacy_service debug_param:file { map open read };
allow privacy_service bootevent_param:file { map open read };
allow privacy_service bootevent_samgr_param:file { map open read };
allow privacy_service distributedsche_param:file { map open read };
allow privacy_service build_version_param:file { map open read };
allow privacy_service input_pointer_device_param:file { map open read };
allow privacy_service default_param:file { map open read };
allow privacy_service tracefs:dir { search };
allow privacy_service tracefs_trace_marker_file:file { open write };
allow param_watcher privacy_service:binder { call transfer };
allow privacy_service audio_policy:binder { call transfer };
allow privacy_service param_watcher:binder { call transfer };
allow privacy_service pulseaudio:binder { call transfer };

allow privacy_service dev_console_file:chr_file { read write };

allow init privacy_service:process { rlimitinh siginh transition };

allow privacy_service sa_accesstoken_manager_service:samgr_class { get };
allow privacy_service sa_audio_policy_service:samgr_class { get };
allow privacy_service sa_foundation_abilityms:samgr_class { get };
allow privacy_service sa_foundation_appms:samgr_class { get };
allow privacy_service sa_foundation_wms:samgr_class { get };
allow privacy_service sa_param_watcher:samgr_class { get };
allow privacy_service sa_privacy_service:samgr_class { add get };
allow privacy_service sa_pulseaudio_audio_service:samgr_class { get };

binder_call(privacy_service, sh);
binder_call(privacy_service, accesstoken_service);
binder_call(privacy_service, foundation);
binder_call(foundation, privacy_service);
# avc:  denied  { get } for service=3008 pid=500 scontext=u:r:privacy_service:s0 tcontext=u:object_r:sa_camera_service:s0 tclass=samgr_class permissive=0
allow privacy_service sa_camera_service:samgr_class { get };
