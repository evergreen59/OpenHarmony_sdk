# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

if (!defined(global_parts_info) ||
    defined(global_parts_info.account_os_account)) {
  has_os_account_part = true
} else {
  has_os_account_part = false
}

ohos_source_set("userauth_services_ipc") {
  include_dirs = [
    "inc",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
  ]

  remove_configs = [ "//build/config/compiler:no_exceptions" ]

  sources = [
    "src/co_auth_service.cpp",
    "src/executor_messenger_service.cpp",
    "src/ipc_common.cpp",
    "src/user_auth_service.cpp",
    "src/user_idm_service.cpp",
  ]

  deps = [
    "//base/useriam/user_auth_framework/common:iam_utils",
    "//base/useriam/user_auth_framework/frameworks/native/common:attributes",
    "//base/useriam/user_auth_framework/frameworks/native/common:dfx",
    "//base/useriam/user_auth_framework/frameworks/native/ipc:userauth_service_ipc",
    "//base/useriam/user_auth_framework/services/base:userauth_service_base",
    "//base/useriam/user_auth_framework/services/context:userauth_service_context",
    "//base/useriam/user_auth_framework/services/core:userauth_service_core",
    "//third_party/openssl:libcrypto_shared",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "drivers_interface_user_auth:libuser_auth_proxy_1.0",
    "hilog_native:libhilog",
    "hitrace_native:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
  ]

  if (has_os_account_part) {
    cflags_cc = [ "-DHAS_OS_ACCOUNT_PART" ]
    external_deps += [ "os_account:os_account_innerkits" ]
  }

  configs = [ "//base/useriam/user_auth_framework/common:iam_log_config" ]

  part_name = "user_auth_framework"
}
