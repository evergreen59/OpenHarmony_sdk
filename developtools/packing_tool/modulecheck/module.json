{
  "title": "JSON schema for module.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": true,
  "required": [
    "module"
  ],
  "propertyNames": {
    "enum": [
      "module"
    ]
  },
  "properties": {
    "module": {
      "description": "Indicates the configuration of a .hap file. The module configuration is valid only for the current .hap file.",
      "type": "object",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "shared"
              }
            }
          },
          "then": {
            "propertyNames": {
              "enum": [
                "name",
                "type",
                "description",
                "deliveryWithInstall",
                "deviceTypes",
                "pages",
                "metadata",
                "requestPermissions",
                "dependencies",
                "libIsolation",
                "installationFree",
                "atomicService"
              ]
            },
            "required": [
              "name",
              "type",
              "deliveryWithInstall",
              "deviceTypes"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "har"
              }
            }
          },
          "then": {
            "propertyNames": {
              "enum": [
                "name",
                "type",
                "srcEntrance",
                "srcEntry",
                "description",
                "process",
                "mainElement",
                "deviceTypes",
                "installationFree",
                "virtualMachine",
                "uiSyntax",
                "metadata",
                "abilities",
                "extensionAbilities",
                "requestPermissions",
                "definePermissions",
                "testRunner",
                "dependencies",
                "libIsolation"
              ]
            },
            "required": [
              "name",
              "type",
              "deviceTypes"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "entry"
              }
            }
          },
          "then": {
            "propertyNames": {
              "enum": [
                "name",
                "type",
                "srcEntrance",
                "srcEntry",
                "description",
                "process",
                "mainElement",
                "deviceTypes",
                "deliveryWithInstall",
                "installationFree",
                "virtualMachine",
                "uiSyntax",
                "pages",
                "metadata",
                "abilities",
                "extensionAbilities",
                "requestPermissions",
                "definePermissions",
                "testRunner",
                "dependencies",
                "libIsolation",
                "atomicService"
              ]
            },
            "required": [
              "name",
              "type",
              "deviceTypes",
              "deliveryWithInstall",
              "pages"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "feature"
              }
            }
          },
          "then": {
            "propertyNames": {
              "enum": [
                "name",
                "type",
                "srcEntrance",
                "srcEntry",
                "description",
                "process",
                "mainElement",
                "deviceTypes",
                "deliveryWithInstall",
                "installationFree",
                "virtualMachine",
                "uiSyntax",
                "pages",
                "metadata",
                "abilities",
                "extensionAbilities",
                "requestPermissions",
                "definePermissions",
                "testRunner",
                "dependencies",
                "libIsolation",
                "atomicService"
              ]
            },
            "required": [
              "name",
              "type",
              "deviceTypes",
              "deliveryWithInstall",
              "pages"
            ]
          }
        }
      ],
      "properties": {
        "name": {
          "description": "Indicates the module name.",
          "type": "string",
          "pattern": "[^\u4e00-\u9fa5]+",
          "maxLength": 31
        },
        "type": {
          "description": "Indicates the type of the module.",
          "type": "string",
          "enum": [
            "entry",
            "feature",
            "har",
            "shared"
          ]
        },
        "srcEntrance": {
          "description": "This tag indicates the entry js code path corresponding to hap",
          "type": "string",
          "deprecationMessage": "Deprecated since api 9, use srcEntry instead.",
          "maxLength": 127
        },
        "srcEntry": {
          "description": "This tag indicates the entry js code path corresponding to hap",
          "type": "string",
          "maxLength": 127
        },
        "description": {
          "description": "Indicates the description of the current .hap file.",
          "type": "string",
          "maxLength": 255
        },
        "process": {
          "description": "Indicates the name of the process running the module.",
          "type": "string",
          "maxLength": 31
        },
        "mainElement": {
          "description": "Describes hap entry ability name or extension name.",
          "type": "string",
          "maxLength": 255
        },
        "deviceTypes": {
          "description": "Indicates the type of devices on which the abilities can run.This label cannot be left blank.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "default",
              "tablet",
              "tv",
              "wearable",
              "car"
            ]
          }
        },
        "deliveryWithInstall": {
          "description": "Specifies whether the .hap file is installed when the user installs the application.true: The .hap file is installed during the application installation.false: The .hap file is not installed during the application installation.This label cannot be left blank.",
          "type": "boolean"
        },
        "installationFree": {
          "description": "Indicates whether free installation of the current hap is supported.If installationFree is true, this module is a service.OtherWise, this module is an application",
          "type": "boolean"
        },
        "virtualMachine": {
          "description": "Identify the type of target virtual machine currently running hap.",
          "type": "string",
          "enum": [
            "ark",
            "default"
          ],
          "default": "default"
        },
        "uiSyntax": {
          "description": "Indicates the syntax type of JS Component.Default is hml.",
          "deprecationMessage": "Deprecated since api 9",
          "type": "string",
          "enum": [
            "ets",
            "hml"
          ],
        "default": "hml"
        },
        "pages": {
          "description": "Used to list the information of each page in JS Component.",
          "type": "string",
          "pattern": "^[$]profile:[0-9a-zA-Z_.]+$",
          "maxLength": 255
        },
        "metadata": {
          "description": "Indicates the metadata of the module.",
          "type": "array",
          "items": {
            "type": "object",
            "propertyNames": {
              "enum": [
                "name",
                "value",
                "resource"
              ]
            },
            "properties": {
              "name": {
                "description": "Indicates the key of a data element. The value is a string with a maximum of 255 bytes.",
                "type": "string",
                "maxLength": 255
              },
              "value": {
                "description": "Indicates the value of a data element. The value is a string with a maximum of 255 bytes.",
                "type": "string",
                "maxLength": 255
              },
              "resource": {
                "description": "Indicates the resource of a data element.",
                "type": "string",
                "pattern": "^[$]profile:[0-9a-zA-Z_.]+$",
                "maxLength": 255
              }
            }
          }
        },
        "abilities": {
          "description": "Indicates all abilities in the current module. The value is an array of objects, each of which represents an ability.This label can be left blank by default,and indicates no capability exists in the current module.",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "required": [
                  "name",
                  "srcEntrance",
                  "startWindowIcon",
                  "startWindowBackground"
                ]
              },
              {
                "required": [
                  "name",
                  "srcEntry",
                  "startWindowIcon",
                  "startWindowBackground"
                ]
              }
            ],
            "propertyNames": {
              "enum": [
                "priority",
                "name",
                "srcEntrance",
                "srcEntry",
                "launchType",
                "description",
                "icon",
                "label",
                "permissions",
                "metadata",
                "visible",
                "exported",
                "skills",
                "backgroundModes",
                "continuable",
                "startWindowIcon",
                "startWindowBackground",
                "removeMissionAfterTerminate",
                "orientation",
                "supportWindowMode",
                "maxWindowRatio",
                "minWindowRatio",
                "maxWindowWidth",
                "minWindowWidth",
                "maxWindowHeight",
                "minWindowHeight",
                "excludeFromMissions"
              ]
            },
            "properties": {
              "priority": {
                "description": "Indicates the priority of the ability.Only for system application.This field is used for implicit query.Range from 0 to 10, default value is 0.",
                "type": "integer",
                "minimum": 0,
                "maximum": 10
              },
              "name": {
                "description": "Indicates the name of the ability.",
                "type": "string",
                "pattern": "[^\u4e00-\u9fa5]+",
                "maxLength": 127
              },
              "srcEntrance": {
                "description": "Indicates the js code path corresponding to the ability.",
                "type": "string",
                "deprecationMessage": "Deprecated since api 9, use srcEntry instead.",
                "maxLength": 127
              },
              "srcEntry": {
                "description": "Indicates the js code path corresponding to the ability.",
                "type": "string",
                "maxLength": 127
              },
              "launchType": {
                "description": "Indicates the boot mode of ability.",
                "type": "string",
                "enum": [
                  "standard",
                  "singleton",
                  "specified",
                  "multiton"
                ],
                "default": "singleton"
              },
              "description": {
                "description": "Describes the ability.",
                "type": "string",
                "maxLength": 255
              },
              "icon": {
                "description": "Indicates the index to the ability icon file, in the format of \"$media:ability_icon\".This label can be left blank by default.",
                "type": "string",
                "pattern": "^[$]media:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
              },
              "label": {
                "description": "Indicates the ability name visible to users. The tag value is set to the resource index of this name to support multiple languages.",
                "type": "string",
                "maxLength": 255,
                "pattern": "^[$]string:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
              },
              "permissions": {
                "description": "Indicates the permissions required for abilities of another application to call the current ability, generally in the format of a reverse domain name. The value can be either the permissions predefined in the OS or those customized by your application. If a custom permission is used, the value must be the same as the name value of a specific permission defined in the definePermissions attribute.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "maxLength": 255
                }
              },
              "metadata": {
                "description": "Indicates the metadata of the ability.",
                "type": "array",
                "items": {
                  "type": "object",
                  "propertyNames": {
                    "enum": [
                      "name",
                      "value",
                      "resource"
                    ]
                  },
                  "properties": {
                    "name": {
                      "description": "Indicates the key of a data element. The value is a string with a maximum of 255 bytes.",
                      "type": "string",
                      "maxLength": 255
                    },
                    "value": {
                      "description": "Indicates the value of a data element. The value is a string with a maximum of 255 bytes.",
                      "type": "string",
                      "maxLength": 255
                    },
                    "resource": {
                      "description": "Indicates the resource of a data element.",
                      "type": "string",
                      "pattern": "^[$]profile:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$",
                      "maxLength": 255
                    }
                  }
                }
              },
              "visible": {
                "description": "Specifies whether the ability can be called by other applications.The \"true\" indicates the ability can be called by other applications.The \"false\" indicates the ability cannot be called by other applications.This tag is optional. The default value is false.",
                "type": "boolean",
                "deprecationMessage": "Deprecated since api 9, use exported instead.",
                "default": false
              },
              "exported": {
                "description": "Specifies whether the ability can be called by other applications.The \"true\" indicates the ability can be called by other applications.The \"false\" indicates the ability cannot be called by other applications.This tag is optional. The default value is false.",
                "type": "boolean",
                "default": false
              },
              "skills": {
                "description": "Indicates the types of the intent that can be accepted by the ability.",
                "type": "array",
                "items": {
                  "type": "object",
                  "uniqueItems": true,
                  "propertyNames": {
                    "enum": [
                      "actions",
                      "entities",
                      "uris"
                    ]
                  },
                  "properties": {
                    "actions": {
                      "description": "Indicates the actions of the intent that can be accepted by the ability. The value can have one or multiple actions predefined in the system.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "entities": {
                      "description": "Indicates the entities of the intent that can be accepted by the ability, such as video and Home application. The value can have one or multiple entities either predefined in the system or be customized.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true
                    },
                    "uris": {
                      "description": "This tag identifies the collection of data specifications to be added to the Intent filter.",
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "propertyNames": {
                              "enum": [
                                "scheme",
                                "host",
                                "port",
                                "pathStartWith",
                                "path",
                                "pathRegex",
                                "type"
                              ]
                            },
                            "required": [
                              "scheme"
                            ],
                            "properties": {
                              "scheme": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "host": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "port": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "pathStartWith": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "path": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "pathRegex": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "type": {
                                "description": "This label is a string type.",
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "propertyNames": {
                              "enum": [
                                "type"
                              ]
                            },
                            "properties": {
                              "type": {
                                "description": "This label is a string type.",
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "backgroundModes": {
                "description": "Indicates the background service addressing a specific usage scenario. This attribute is dedicated to the abilities using the Service template. You can assign multiple background service types to a specific ability using the Service template.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "enum": [
                    "dataTransfer",
                    "audioPlayback",
                    "audioRecording",
                    "location",
                    "bluetoothInteraction",
                    "multiDeviceConnection",
                    "wifiInteraction",
                    "voip",
                    "taskKeeping"
                  ]
                }
              },
              "continuable": {
                "description": "Identifies whether the ability can be migrated. The default value is false.",
                "type": "boolean"
              },
              "startWindowIcon": {
                "description": "Indicates the icon of the startup page. The value is the index to the resource file.",
                "type": "string",
                "pattern": "^[$]media:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$",
                "maxLength": 255
              },
              "startWindowBackground": {
                "description": "Indicates the color of the startup page. The value is the index to the resource file.",
                "type": "string",
                "pattern": "^[$]color:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$",
                "maxLength": 255
              },
              "removeMissionAfterTerminate": {
                "description": "Specifies whether to remove the mission after the ability termination.",
                "type": "boolean",
                "default": false
              },
              "orientation": {
                "description": "Indicates the display orientation of the ability. This attribute is valid only for abilities using the Page template.",
                "enum": [
                  "unspecified",
                  "landscape",
                  "portrait",
                  "landscape_inverted",
                  "portrait_inverted",
                  "auto_rotation",
                  "auto_rotation_landscape",
                  "auto_rotation_portrait",
                  "auto_rotation_restricted",
                  "auto_rotation_landscape_restricted",
                  "auto_rotation_portrait_restricted",
                  "locked"
                ],
                "type": "string"
              },
              "supportWindowMode": {
                "description": "Specifies supported window modes",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "enum": [
                    "fullscreen",
                    "split",
                    "floating"
                  ]
                }
              },
              "maxWindowRatio": {
                "description": "This tag identifies the max window ratio. The value is an number.",
                "type": "number",
                "minimum": 0
              },
              "minWindowRatio": {
                "description": "This tag identifies the min window ratio. The value is an number.",
                "type": "number",
                "minimum": 0
              },
              "maxWindowWidth": {
                "description": "This tag identifies the min window ratio. The value is an integer.",
                "type": "integer",
                "minimum": 0
              },
              "minWindowWidth": {
                "description": "This tag identifies the min window ratio. The value is an integer.",
                "type": "integer",
                "minimum": 0
              },
              "maxWindowHeight": {
                "description": "This tag identifies the min window ratio. The value is an integer.",
                "type": "integer",
                "minimum": 0
              },
              "minWindowHeight": {
                "description": "This tag identifies the min window ratio. The value is an integer.",
                "type": "integer",
                "minimum": 0
              },
              "excludeFromMissions": {
                "description": "Specifies whether to display in the recent missions list. For system application only.",
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "extensionAbilities": {
          "description": "Indicates all extensionAbilities in the current module.",
          "type": "array",
          "items": {
            "type": "object",
            "if": {
              "properties": {
                "type": {
                  "const": "dataShare"
                }
              }
            },
            "then": {
              "oneOf": [
                {
                  "required": [
                    "name",
                    "srcEntrance",
                    "type",
                    "uri"
                  ]
                },
                {
                  "required": [
                    "name",
                    "srcEntry",
                    "type",
                    "uri"
                  ]
                }
              ]
            },
            "else": {
              "oneOf": [
                {
                  "required": [
                    "name",
                    "srcEntrance",
                    "type"
                  ]
                },
                {
                  "required": [
                    "name",
                    "srcEntry",
                    "type"
                  ]
                }
              ]
            },
            "propertyNames": {
              "enum": [
                "priority",
                "name",
                "srcEntrance",
                "srcEntry",
                "icon",
                "label",
                "description",
                "type",
                "permissions",
                "uri",
                "readPermission",
                "writePermission",
                "visible",
                "exported",
                "skills",
                "metadata"
              ]
            },
            "properties": {
              "priority": {
                "description": "Indicates the priority of the ability.Only for system application.This field is used for implicit query.Range from 0 to 10, default value is 0.",
                "type": "integer",
                "minimum": 0,
                "maximum": 10
              },
              "name": {
                "description": "Indicates the name of the extension.",
                "type": "string",
                "maxLength": 127
              },
              "srcEntrance": {
                "description": "Indicates the js code path corresponding to the extension.",
                "deprecationMessage": "Deprecated since api 9, use srcEntry instead.",
                "type": "string",
                "maxLength": 127
              },
              "srcEntry": {
                "description": "Indicates the js code path corresponding to the extension.",
                "type": "string",
                "maxLength": 127
              },
              "icon": {
                "description": "Indicates the index to the extension icon file.If the extension is configured as MainElement, the tag must be configured",
                "type": "string",
                "pattern": "^[$]media:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
              },
              "label": {
                "description": "Indicates the extension name visible to users. The tag value is set to the resource index of this name to support multiple languages.",
                "type": "string",
                "maxLength": 255,
                "pattern": "^[$]string:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
              },
              "description": {
                "description": "Describes the extension. The value can be a string or a resource index to descriptions in multiple languages.This label can be left blank by default.",
                "type": "string",
                "maxLength": 255
              },
              "type": {
                "description": "Indicates the type of the extension.",
                "type": "string",
                "enum": [
                  "form",
                  "workScheduler",
                  "inputMethod",
                  "service",
                  "accessibility",
                  "dataShare",
                  "fileShare",
                  "staticSubscriber",
                  "wallpaper",
                  "backup",
                  "window",
                  "enterpriseAdmin",
                  "thumbnail",
                  "preview"
                ]
              },
              "permissions": {
                "description": "Indicates the permissions required for extensionAbilities of another application to call the current extension.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "maxLength": 255
                }
              },
              "uri": {
                "description": "Identifies the provided uri data for current extension.",
                "type": "string",
                "maxLength": 255
              },
              "readPermission": {
                "description": "Indicates the readPermission required for extensionAbilities of another application to call the current extension.",
                "type": "string",
                "maxLength": 255
              },
              "writePermission": {
                "description": "Indicates the writePermission required for extensionAbilities of another application to call the current extension.",
                "type": "string",
                "maxLength": 255
              },
              "visible": {
                "description": "Specifies whether the extension can be called by other applications.",
                "deprecationMessage": "Deprecated since api 9, use exported instead.",
                "type": "boolean",
                "default": false
              },
              "exported": {
                "description": "Specifies whether the extension can be called by other applications.",
                "type": "boolean",
                "default": false
              },
              "skills": {
                "description": "Indicates the types of the intent that can be accepted by the extension.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "object",
                  "propertyNames": {
                    "enum": [
                      "actions",
                      "entities",
                      "uris"
                    ]
                  },
                  "properties": {
                    "actions": {
                      "description": "Indicates the actions of the intent that can be accepted by the extension. The value can have one or multiple actions predefined in the system.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "entities": {
                      "description": "Indicates the entities of the intent that can be accepted by the extension, such as video and Home application. The value can have one or multiple entities either predefined in the system or be customized.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "uris": {
                      "description": "This tag identifies the collection of data specifications to be added to the Intent filter.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "propertyNames": {
                              "enum": [
                                "scheme",
                                "host",
                                "port",
                                "pathStartWith",
                                "path",
                                "pathRegex",
                                "type"
                              ]
                            },
                            "required": [
                              "scheme"
                            ],
                            "properties": {
                              "scheme": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "host": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "port": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "pathStartWith": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "path": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "pathRegex": {
                                "description": "This label is a string type.",
                                "type": "string"
                              },
                              "type": {
                                "description": "This label is a string type.",
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "propertyNames": {
                              "enum": [
                                "type"
                              ]
                            },
                            "properties": {
                              "type": {
                                "description": "This label is a string type.",
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "metadata": {
                "description": "Indicates the metadata of the extension.",
                "type": "array",
                "items": {
                  "type": "object",
                  "propertyNames": {
                    "enum": [
                      "name",
                      "value",
                      "resource"
                    ]
                  },
                  "properties": {
                    "name": {
                      "description": "Indicates the key of a data element. The value is a string with a maximum of 255 bytes.",
                      "type": "string",
                      "maxLength": 255
                    },
                    "value": {
                      "description": "Indicates the value of a data element. The value is a string with a maximum of 255 bytes.",
                      "type": "string",
                      "maxLength": 255
                    },
                    "resource": {
                      "description": "Indicates the resource of a data element.",
                      "type": "string",
                      "pattern": "^[$]profile:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$",
                      "maxLength": 255
                    }
                  }
                }
              }
            }
          }
        },
        "definePermissions": {
          "description": "Indicates the permissions defined by the application.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object",
            "propertyNames": {
              "enum": [
                "name",
                "grantMode",
                "availableLevel",
                "provisionEnable",
                "distributedSceneEnable",
                "label",
                "description"
              ]
            },
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Specifies the permission name. The value is a character string.",
                "type": "string"
              },
              "grantMode": {
                "description": "This tag identifies the permission granting mode.",
                "type": "string",
                "enum": [
                  "system_grant",
                  "user_grant"
                ],
                "default": "system_grant"
              },
              "availableLevel": {
                "description": "This tag identifies the permission level.",
                "type": "string",
                "enum": [
                  "system_core",
                  "system_basic",
                  "normal"
                ],
                "default": "normal"
              },
              "provisionEnable": {
                "description": "Specifies whether to support the certificate method to apply for permission.",
                "type": "boolean",
                "default": true
              },
              "distributedSceneEnable": {
                "description": "Specifies whether to support the use of this permission in distributed scenarios.",
                "type": "boolean",
                "default": false
              },
              "label": {
                "description": "This tag identifies the short description of the permission.",
                "type": "string",
                "pattern": "^[$]string:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
              },
              "description": {
                "description": "This tag indicates the detailed description of the permission.",
                "type": "string"
              }
            }
          }
        },
        "requestPermissions": {
          "description": "Indicates the permissions that the application applies for from the system before its running.This label can be left blank by default.",
          "type": "array",
          "items": {
            "type": "object",
            "propertyNames": {
              "enum": [
                "name",
                "reason",
                "usedScene"
              ]
            },
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Specifies the permission name to be used.",
                "type": "string"
              },
              "reason": {
                "description": "Describe the reason for applying for the permission.",
                "type": "string",
                "pattern": "^[$]string:[0-9a-zA-Z_.]+|(?=.*[{])(?=.*[}])[0-9a-zA-Z_.{}]+$"
              },
              "usedScene": {
                "description": "This section describes the scenarios and timing of permission usage.",
                "type": "object",
                "propertyNames": {
                  "enum": [
                    "abilities",
                    "when"
                  ]
                },
                "properties": {
                  "abilities": {
                    "description": "This tag identifies the abilities that need the permission.",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "when": {
                    "description": "This tag identifies the time when the permission is used.",
                    "type": "string",
                    "enum": [
                      "inuse",
                      "always"
                    ]
                  }
                }
              }
            }
          }
        },
        "testRunner": {
          "description": "This tag is used for configure the test properties.",
          "type":"object",
          "required": [
            "name",
            "srcPath"
          ],
          "propertyNames": {
            "enum": [
              "name",
              "srcPath"
            ]
          },
          "properties":{
            "name": {
              "description": "Indicates the name of testRunner,  The value is a string with a maximum of 255 bytes",
              "type": "string",
              "maxLength": 255
            },
            "srcPath": {
              "description": "Indicates the srcPath testRunner,  The value is a string with a maximum of 255 bytes",
              "type": "string",
              "maxLength": 255
            }
          }
        },
        "dependencies": {
          "description": "Indicates the module names that this module depends on.",
          "type": "array",
          "items": {
            "type": "object",
            "propertyNames": {
              "enum": [
                "moduleName"
              ]
            },
            "required": [
              "moduleName"
            ],
            "properties":{
              "moduleName": {
                "description": "Indicates the module name of the dependency shared library.",
                "type": "string",
                "maxLength": 31
              }
            }
          }
        },
        "libIsolation": {
          "description": "Indicates whether to isolate the shared libraries in this module.",
          "type": "boolean"
        },
        "atomicService": {
          "description": "Indicates the module config in atomic service.",
          "type": "object",
          "propertyNames": {
            "enum": [
              "preloads"
            ]
          },
          "properties": {
            "preloads": {
              "description": "Indicates modules are preloaded when the current module is run.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "object",
                "propertyNames": {
                  "enum": [
                    "moduleName"
                  ]
                },
                "properties": {
                  "moduleName": {
                    "description": "Indicates module is preloaded when the current module is run.",
                    "type": "string",
                    "maxLength": 31
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
