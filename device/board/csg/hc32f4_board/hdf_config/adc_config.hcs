root {
    platform {
        adc_config {
            match_attr = "hc32f4xx_adc_driver";
            template adc_device {
            }
            device_0 :: adc_device {
                //ADC配置
                device_num = 0;
                adc_type = 0;  //ADC单元:0-ADC1 1-ADC2 2-ADC3
                sequence = 0;
                //ADC通道、引脚配置
                //eg：配置3个通道 PA2-CH2 PA3-CH3 PC5-CH15
                channel_count = 3;  //所用ADC通道个数
                adc_channel = [2, 3, 15];  //ADC通道选择:0~19, 0-ADC_CH0, 1-ADC_CH1, 19-ADC_CH19
                group = [0, 0, 2];  //GPIO组 0:GPIOA 1:GPIOB 2:GPIOC 3:GPIOD 4:GPIOE 5: GPIOF 6:GPIOG 7:GPIOH 8:GPIOI
                pin = [2, 3, 5];  //GPIO管脚0-15
                gpio_mode = 1; //0-DIGITAL  1-ANALOG

                //DMA配置
                dma_width = 1;  //DMA数据传输宽度：0-8bit 1-16bit 2-32bit
                dma_type = 0;  //DMA通道： 0-DMA1 1-DMA2
                dma_channel = 0; //DMA通道：0-DMA_CH0 1-DMA_CH1 7-DMA_CH7
                dma_trig_src = 0;  //设置DMA trigger source：0-序列 A 扫描结束中断和事件，1-序列 B 扫描结束中断和事件，2-模拟看门狗 0 比较中断和事件，3-模拟看门狗 1 比较中断和事件
                dma_clock = 0;  //DMA时钟使能：0-使能DMA1时钟，1-使能DMA2时钟
                dma_irq = 38;  //DMA中断号
                dma_irq_enum = 40; //DMA中断类型
                dma_irq_prio = 3;  //DMA中断优先级：00 ~ 15

                //TMR配置
                timer_type = 1;  //timer选择：0:timer0 1:timer2 2:timer4 3:timer6
                timer_type_x = 1;  //timer通道: TMR0:0-ch1 1-ch2  TMR2:0-ch1 1-ch2 2-ch3 3-ch4 TMR4:0-ch1 1-ch2 2-ch3  TMR6:0-ch1 1-ch2 2-ch3 3-ch4 4-ch5 5-ch6 6-ch7 7-ch8 
                timer_ch = 1;  //0-CH_A 1-CH_B
                clock_div = 10;  //0-10, 0:CLK 1:CLK/2 2:CLK/4 ...... 10:CLK/1024
                tmr_compvalue = 65535;  //timer比较值 0~65535
                aos_adcx = 0;  //0:AOS_ADC1_0 1:AOS_ADC1_1 2:AOS_ADC2_0 3:AOS_ADC2_1 4:AOS_ADC3_0 5:AOS_ADC3_1
                adc_seq_x = 0;  //ADC序列： 0-序列A 1-序列B
                adc_hardtrig = 1;  //触发方式
                tmr_event_number = 105;  //timer事件触发中断源，查询en_event_src_t定义
            }
            device_1 :: adc_device {
                //ADC配置
                device_num = 1;
                adc_type = 1;  //ADC单元:0-ADC1 1-ADC2 2-ADC3
                sequence = 1;
                //ADC通道、引脚配置
                channel_count = 1;  //所用ADC通道个数
                adc_channel = [1];
                group = [1];
                pin = [1];
                gpio_mode = 0;  //0-DIGITAL  1-ANALOG

                //DMA配置
                dma_width = 0;  //DMA数据传输宽度：0-8bit 1-16bit 2-32bit
                dma_type = 1;  //DMA通道： 0-DMA1 1-DMA2
                dma_channel = 1; //DMA通道：0-DMA_CH0 1-DMA_CH1 7-DMA_CH7
                dma_trig_src = 1; //设置DMA trigger source：0-序列 A 扫描结束中断和事件，1-序列 B 扫描结束中断和事件，2-模拟看门狗 0 比较中断和事件，3-模拟看门狗 1 比较中断和事件
                dma_clock = 1;  //DMA时钟使能：0-使能DMA1时钟，1-使能DMA2时钟
                dma_irq = 39;  //DMA中断号
                dma_irq_enum = 41; //DMA中断类型
                dma_irq_prio = 4; //DMA中断优先级：00 ~ 15

                //TMR配置
                timer_type = 2;  //timer选择：0:timer0 1:timer2 2:timer4 3:timer6
                timer_type_x = 3;  //timer通道: TMR0:0-0_1 1-0_2  TMR2:0-2_1 1-2_2 2-2_3 3-2_4 TMR4:0-4_1 1-4_2 2-4_3  TMR6:0-6_1 1-6_2 2-6_3 3-6_4 4-6_5 5-6_6 6-6_7 7-6_8
                timer_ch = 0;  //0-CH_A 1-CH_B
                clock_div = 9;  //0-10, 0:CLK 1:CLK/2 2:CLK/4 ...... 10:CLK/1024
                tmr_compvalue = 32768;  //timer比较值 0~65535
                aos_adcx = 1;  //0:AOS_ADC1_0 1:AOS_ADC1_1 2:AOS_ADC2_0 3:AOS_ADC2_1 4:AOS_ADC3_0 5:AOS_ADC3_1
                adc_seq_x = 1;  //ADC序列： 0-序列A 1-序列B
                adc_hardtrig = 2;  //触发方式
                tmr_event_number = 106; //timer事件触发中断源，查询en_event_src_t定义
            }
        }
    }
}
