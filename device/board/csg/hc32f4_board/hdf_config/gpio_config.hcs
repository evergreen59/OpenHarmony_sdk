root {
    platform {
        gpio_config {
            match_attr = "gpio_config";
            pinNum = 9;
            pin =            [ 0, 1,  2,  3,  4,  5,  6, 7, 8]; // GPIO序号
            realPin =        [ 9, 10, 0,  5,  9,  1,  2, 7, 9]; // GPIO管脚0-15
            group =          [ 2, 3,  0,  6,  3,  1,  2, 2, 3]; // GPIO组 0:GPIOA 1:GPIOB 2:GPIOC 3:GPIOD 4:GPIOE 5: GPIOF 6:GPIOG 7:GPIOH 8:GPIOI
            PinState =       [ 1, 0,  0,  1,  0,  0,  0, 0, 0]; // GPIO状态 0: 置低   1: 置高
            PinDir =         [ 1, 0,  1,  1,  0,  1,  1, 1, 1]; // GPIO方向 0: 输入   1: 输出
            PinOutputType =  [ 0, 0,  0,  0,  0,  0,  0, 0, 0]; // NMOS开漏 0 :正常CMOS输出模式 1: NMOS开漏输出
            PinDrv =         [ 0, 0,  0,  0,  0,  0,  0, 0, 0]; // 驱动模式选择 0:低驱动力模式  1:中驱动力模式  2:高驱动力模式
            Latch =          [ 0, 0,  0,  0,  0,  0,  0, 0, 0]; // 输出状态锁存 0:输出锁存无效  1:输出锁存有效 
            PullUp =         [ 1, 1,  1,  1,  0,  1,  0, 0, 0]; // 上拉许可 0: 不上拉 1:上拉
            Invert =         [ 0, 0,  0,  0,  0,  0,  0, 0, 0]; // 反相许可 0: 输入输出数据不反相 1: 输入输出数据反相
            ExtInt =         [ 0, 0,  0,  0,  0,  0,  0, 0, 0]; // 外部中断许可 0: 外部中断关闭 1:外部中断打开
            PinInputType =   [ 0, 0,  0,  0,  0,  0,  0, 0, 0]; // 输入模式选择 0:施密特输入 1:CMOS输入
            PinAttr =        [ 0, 0,  0,  0,  0,  0,  0, 0, 0]; // 数字功能 0:数字功能有效 1:数字功能禁止
            IntSrc =         [ 0, 1,  0,  0,  4,  5,  6, 6, 6]; // 中断号
            IRQn =           [ 0, 1,  0,  0,  4,  5,  6, 6, 6]; // 中断类型
        }
    }
}
