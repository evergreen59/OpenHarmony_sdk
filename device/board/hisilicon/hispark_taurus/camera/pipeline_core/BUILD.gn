import("//drivers/peripheral/camera/hal/camera.gni")

if (defined(ohos_lite)) {
  import("//build/ohos.gni")
  import("//drivers/hdf_core/adapter/uhdf/uhdf.gni")
  import("//drivers/hdf_core/framework/tools/hc-gen/hc_gen.gni")

  hc_gen_c("generate_source") {
    sources = [
      "$product_config_path/hdf_config/uhdf/camera/pipeline_core/config.hcs",
      "$product_config_path/hdf_config/uhdf/camera/pipeline_core/params.hcs",
    ]
  }

  action("copy_source") {
    script = "//build/lite/run_shell_cmd.py"
    outputs = [ "$target_out_dir/tmp.c" ]  # no use, just for gn complains
    args = [
      "cp",
      "-f",
    ]
    args += rebase_path(get_target_outputs(":generate_source"))
    args += [ rebase_path(
            "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/") ]
    deps = [ ":generate_source" ]
  }

  config("pipe_config") {
    visibility = [ ":*" ]
    cflags_cc = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-Wno-error",
      "-DGST_DISABLE_DEPRECATED",
      "-DHAVE_CONFIG_H",
      "-DCOLORSPACE=\"videoconvert\"",
      "-fno-strict-aliasing",
      "-Wno-sign-compare",
      "-Wno-builtin-requires-header",
      "-Wno-unused-variable",
      "-Wno-unused-label",
      "-Wno-implicit-function-declaration",
      "-Wno-format",
      "-Wno-int-conversion",
      "-Wno-unused-function",
      "-Wno-thread-safety-attributes",
      "-Wno-inconsistent-missing-override",
      "-fno-rtti",
      "-fno-exceptions",
      "-ffunction-sections",
      "-fdata-sections",
      "-Wno-c++11-narrowing",
    ]
  }

  ohos_shared_library("camera_pipeline_core") {
    sources = [
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/mpi_node/mpi_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/venc_node/venc_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vi_node/vi_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vo_node/vo_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vpss_node/vpss_node.cpp",
      "$camera_path/pipeline_core/host_stream/src/host_stream_impl.cpp",
      "$camera_path/pipeline_core/host_stream/src/host_stream_mgr_impl.cpp",
      "$camera_path/pipeline_core/ipp/src/algo_plugin.cpp",
      "$camera_path/pipeline_core/ipp/src/algo_plugin_manager.cpp",
      "$camera_path/pipeline_core/ipp/src/ipp_algo_parser.cpp",
      "$camera_path/pipeline_core/ipp/src/ipp_node.cpp",
      "$camera_path/pipeline_core/ipp/src/offline_pipeline.cpp",
      "$camera_path/pipeline_core/ipp/src/offline_pipeline_manager.cpp",
      "$camera_path/pipeline_core/nodes/src/dummy_node/dummy_node.cpp",
      "$camera_path/pipeline_core/nodes/src/merge_node/merge_node.cpp",
      "$camera_path/pipeline_core/nodes/src/node_base/node_base.cpp",
      "$camera_path/pipeline_core/nodes/src/sensor_node/sensor_node.cpp",
      "$camera_path/pipeline_core/nodes/src/sink_node/sink_node.cpp",
      "$camera_path/pipeline_core/nodes/src/source_node/source_node.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/builder/stream_pipeline_builder.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/dispatcher/stream_pipeline_dispatcher.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/parser/config_parser.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/config.c",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/params.c",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/stream_pipeline_strategy.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/stream_pipeline_core.cpp",
      "$camera_path/pipeline_core/src/pipeline_core.cpp",
    ]
    include_dirs = [
      "//commonlibrary/c_utils/base/include",
      "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
      "$camera_path/../interfaces/include",
      "$camera_path/../interfaces/hdi_passthrough",
      "$camera_path/include",
      "$camera_path/hdi_impl",
      "$camera_path/hdi_impl/camera_host/include",
      "$camera_path/hdi_impl/camera_device/include",
      "$camera_path/hdi_impl/stream_operator/include",
      "$camera_path/hdi_impl/include",
      "$camera_path/device_manager",
      "$camera_path/device_manager/include",
      "$camera_path/pipeline_core",
      "$camera_path/pipeline_core/host_stream/include",
      "$camera_path/pipeline_core/utils",
      "$camera_path/pipeline_core/nodes/include",
      "$camera_path/pipeline_core/nodes/src/node_base",
      "$camera_path/pipeline_core/nodes/src/sink_node",
      "$camera_path/pipeline_core/nodes/src/source_node",
      "$camera_path/pipeline_core/nodes/src/sensor_node",
      "$camera_path/pipeline_core/nodes/src/merge_node",
      "$camera_path/pipeline_core/nodes/src/dummy_node",
      "$camera_path/pipeline_core/pipeline_impl/include",
      "$camera_path/pipeline_core/pipeline_impl/src",
      "$camera_path/pipeline_core/include",
      "$camera_path/pipeline_core/pipeline_impl/src/builder",
      "$camera_path/pipeline_core/pipeline_impl/src/dispatcher",
      "$camera_path/pipeline_core/pipeline_impl/src/parser",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config",
      "$camera_path/pipeline_core/ipp/include",
      "$camera_path/interfaces/hdi",
      "$camera_path/utils/event",
      "$board_camera_path/driver_adapter/include",
      "$board_camera_path/device_manager/include",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/mpi_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vi_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vo_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/venc_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vpss_node",
      "$board_camera_path/camera/config/pipeline_core",
      "$camera_path/adapter/platform/mpp/src/device_manager/include",
      "//drivers/peripheral/camera/interfaces/metadata/include",
      "//foundation/communication/ipc/ipc/native/src/core/include",
      "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
      "//commonlibrary/c_utils/base/include",
      "//foundation/graphic/surface/interfaces/kits",
      "//foundation/graphic/utils/interfaces/kits",

      # hcs parser
      "//system/core/include/cutils",
    ]

    deps = [
      ":copy_source",
      "$camera_path/buffer_manager:camera_buffer_manager",
      "$camera_path/device_manager:camera_device_manager",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//drivers/peripheral/camera/interfaces/metadata:metadata",
    ]
    external_deps = [ "hdf_core:libhdf_utils" ]
    public_configs = [ ":pipe_config" ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_camera"
  }
} else {
  import("//build/ohos.gni")
  import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
  config("pipe_config") {
    visibility = [ ":*" ]

    cflags_cc = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-Wno-error",
      "-DGST_DISABLE_DEPRECATED",
      "-DHAVE_CONFIG_H",
      "-DCOLORSPACE=\"videoconvert\"",
      "-fno-strict-aliasing",
      "-Wno-sign-compare",
      "-Wno-builtin-requires-header",
      "-Wno-unused-variable",
      "-Wno-unused-label",
      "-Wno-implicit-function-declaration",
      "-Wno-format",
      "-Wno-int-conversion",
      "-Wno-unused-function",
      "-Wno-thread-safety-attributes",
      "-Wno-inconsistent-missing-override",
      "-fno-rtti",
      "-fno-exceptions",
      "-ffunction-sections",
      "-fdata-sections",
    ]
  }

  ohos_shared_library("camera_pipeline_core") {
    sources = [
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/mpi_node/mpi_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/venc_node/venc_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vi_node/vi_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vo_node/vo_node.cpp",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vpss_node/vpss_node.cpp",
      "$camera_path/pipeline_core/host_stream/src/host_stream_impl.cpp",
      "$camera_path/pipeline_core/host_stream/src/host_stream_mgr_impl.cpp",
      "$camera_path/pipeline_core/ipp/src/algo_plugin.cpp",
      "$camera_path/pipeline_core/ipp/src/algo_plugin_manager.cpp",
      "$camera_path/pipeline_core/ipp/src/ipp_algo_parser.cpp",
      "$camera_path/pipeline_core/ipp/src/ipp_node.cpp",
      "$camera_path/pipeline_core/ipp/src/offline_pipeline.cpp",
      "$camera_path/pipeline_core/ipp/src/offline_pipeline_manager.cpp",
      "$camera_path/pipeline_core/nodes/src/dummy_node/dummy_node.cpp",
      "$camera_path/pipeline_core/nodes/src/merge_node/merge_node.cpp",
      "$camera_path/pipeline_core/nodes/src/node_base/node_base.cpp",
      "$camera_path/pipeline_core/nodes/src/sensor_node/sensor_node.cpp",
      "$camera_path/pipeline_core/nodes/src/sink_node/sink_node.cpp",
      "$camera_path/pipeline_core/nodes/src/source_node/source_node.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/builder/stream_pipeline_builder.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/dispatcher/stream_pipeline_dispatcher.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/parser/config_parser.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/config.c",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/params.c",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/stream_pipeline_strategy.cpp",
      "$camera_path/pipeline_core/pipeline_impl/src/stream_pipeline_core.cpp",
      "$camera_path/pipeline_core/src/pipeline_core.cpp",
    ]
    include_dirs = [
      "$camera_path/../interfaces/include",
      "$camera_path/../interfaces/hdi_ipc",
      "$camera_path/include",
      "$camera_path/hdi_impl",
      "$camera_path/hdi_impl/camera_host/include",
      "$camera_path/hdi_impl/camera_device/include",
      "$camera_path/hdi_impl/stream_operator/include",
      "$camera_path/hdi_impl/include",
      "$camera_path/device_manager",
      "$camera_path/device_manager/include",
      "$camera_path/pipeline_core",
      "$camera_path/pipeline_core/host_stream/include",
      "$camera_path/pipeline_core/utils",
      "$camera_path/pipeline_core/nodes/include",
      "$camera_path/pipeline_core/nodes/src/node_base",
      "$camera_path/pipeline_core/nodes/src/sink_node",
      "$camera_path/pipeline_core/nodes/src/source_node",
      "$camera_path/pipeline_core/nodes/src/sensor_node",
      "$camera_path/pipeline_core/nodes/src/merge_node",
      "$camera_path/pipeline_core/nodes/src/dummy_node",
      "$camera_path/pipeline_core/pipeline_impl/include",
      "$camera_path/pipeline_core/pipeline_impl/src",
      "$camera_path/pipeline_core/include",
      "$camera_path/pipeline_core/pipeline_impl/src/builder",
      "$camera_path/pipeline_core/pipeline_impl/src/dispatcher",
      "$camera_path/pipeline_core/pipeline_impl/src/parser",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy",
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config",
      "$camera_path/pipeline_core/ipp/include",
      "$camera_path/interfaces/hdi",
      "$camera_path/utils/event",
      "$board_camera_path/driver_adapter/include",
      "$board_camera_path/device_manager/include",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/mpi_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vi_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vo_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/venc_node",
      "$camera_path/adapter/platform/mpp/src/pipeline_core/nodes/vpss_node",
      "$camera_path/adapter/platform/mpp/src/device_manager/include",
      "$board_camera_path/camera/config/pipeline_core",
      "//drivers/peripheral/camera/interfaces/metadata/include",

      # hcs parser
      "//system/core/include/cutils",
    ]

    deps = [
      "$camera_path/buffer_manager:camera_buffer_manager",
      "$camera_path/device_manager:camera_device_manager",
      "//drivers/interface/camera/v1_0:libcamera_proxy_1.0",
      "//drivers/peripheral/camera/interfaces/metadata:metadata",
    ]

    if (is_standard_system) {
      external_deps = [
        "c_utils:utils",
        "graphic_chipsetsdk:surface",
        "hdf_core:libhdf_utils",
        "hiviewdfx_hilog_native:libhilog",
        "ipc:ipc_single",
      ]
    } else {
      external_deps = [ "hilog:libhilog" ]
    }

    public_configs = [ ":pipe_config" ]
    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_camera"
  }

  config("example_config") {
    visibility = [ ":*" ]

    cflags = [
      "-Wno-error",
      "-Wno-unused-function",
      "-Wno-unused-parameter",
      "-fstack-protector",
    ]
  }

  ohos_shared_library("camera_ipp_algo_example") {
    sources = [ "$board_camera_path/pipeline_core/src/ipp_algo_example.c" ]

    include_dirs = [ "$camera_path/pipeline_core/ipp/include" ]
    external_deps = [ "c_utils:utils" ]
    public_configs = [ ":example_config" ]
    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_camera"
  }
}
