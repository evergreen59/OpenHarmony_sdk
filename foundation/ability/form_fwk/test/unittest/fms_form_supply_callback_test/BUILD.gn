# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/form_fwk/form_fwk.gni")

module_output_path = "form_fwk/formmgrservice"

ohos_unittest("form_supply_callback_test") {
  module_out_path = module_output_path

  sources = [
    "${form_fwk_path}/test/mock/src/mock_bundle_manager.cpp",
    "${form_fwk_path}/test/mock/src/mock_form_host_client.cpp",
    "${form_fwk_path}/test/mock/src/mock_form_provider_client.cpp",
    "${form_fwk_path}/test/mock/src/remote_native_token.cpp",
    "${form_fwk_path}/test/unittest/fms_form_supply_callback_test/mock_ability_connection.cpp",
    "${form_fwk_path}/test/unittest/fms_form_supply_callback_test/mock_event_handler.cpp",
  ]
  sources += [ "form_supply_callback_test.cpp" ]

  include_dirs = [
    "//third_party/zlib/contrib/minizip",
    "//third_party/zlib",
    "${ability_runtime_path}/services/formmgr/include",
    "${systemabilitymgr_path}/samgr/adapter/interfaces/innerkits/include",
    "${form_fwk_path}/interfaces/inner_api/include",
    "${form_fwk_path}/test/unittest/fms_form_supply_callback_test/",
    "${bundlefwk_path}/common/log/include/",
    "${bundlefwk_path}/services/bundlemgr/include",
    "${bundlefwk_inner_api_path}/appexecfwk_base/include/",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include/",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include/",
    "//foundation/distributedschedule/samgr/adapter/interfaces/innerkits/include/",
    "${distributeddatamgr_path}/kv_store/interfaces/innerkits/distributeddata/include",
    "//foundation/distributedhardware/device_manager/common/include",
    "//foundation/distributedhardware/device_manager/interfaces/inner_kits/native_cpp/include/",
    "//foundation/ability/dmsfwk/services/dtbschedmgr/include/",
  ]

  configs = [
    "${form_fwk_path}/test:formmgr_test_config",
    "${ability_runtime_path}/services/abilitymgr:abilityms_config",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${ability_runtime_path}/interfaces/inner_api/app_manager:app_manager",
    "${ability_runtime_path}/services/abilitymgr:abilityms_target",
    "${distributeddatamgr_path}/kv_store/interfaces/innerkits/distributeddata:distributeddata_inner",
    "${form_fwk_path}:fms_target",
    "${form_fwk_path}:fmskit_native",
    "${form_fwk_path}:form_manager",
    "${form_fwk_path}:libfms",
    "${systemabilitymgr_path}/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "${systemabilitymgr_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "appspawn:appspawn_socket_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "form_fwk:form_manager",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "multimedia_image_framework:image_native",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":form_supply_callback_test" ]
}
