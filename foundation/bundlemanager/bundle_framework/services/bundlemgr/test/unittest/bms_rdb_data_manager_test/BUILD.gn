# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../appexecfwk.gni")
import("../../../appexecfwk_bundlemgr.gni")

module_output_path = "bundle_framework/bundlemgrservice"

ohos_unittest("BmsRdbDataManagerTest") {
  use_exceptions = true
  module_out_path = module_output_path
  include_dirs = []

  sources = [
    "${services_path}/bundlemgr/src/account_helper.cpp",
    "${services_path}/bundlemgr/src/bms_param.cpp",
    "${services_path}/bundlemgr/src/bundle_common_event_mgr.cpp",
    "${services_path}/bundlemgr/src/bundle_data_mgr.cpp",
    "${services_path}/bundlemgr/src/bundle_event_callback_death_recipient.cpp",
    "${services_path}/bundlemgr/src/bundle_mgr_host_impl.cpp",
    "${services_path}/bundlemgr/src/bundle_mgr_service.cpp",
    "${services_path}/bundlemgr/src/bundle_mgr_service_event_handler.cpp",
    "${services_path}/bundlemgr/src/bundle_scanner.cpp",
    "${services_path}/bundlemgr/src/bundle_state_storage.cpp",
    "${services_path}/bundlemgr/src/bundle_status_callback_death_recipient.cpp",
    "${services_path}/bundlemgr/src/bundle_user_mgr_host_impl.cpp",
    "${services_path}/bundlemgr/src/hidump_helper.cpp",
    "${services_path}/bundlemgr/test/mock/src/accesstoken_kit.cpp",
    "${services_path}/bundlemgr/test/mock/src/mock_status_receiver.cpp",
    "${services_path}/bundlemgr/test/mock/src/system_ability_helper.cpp",
  ]

  sources += [
    "${services_path}/bundlemgr/src/bundle_data_storage_rdb.cpp",
    "${services_path}/bundlemgr/src/preinstall_data_storage_rdb.cpp",
    "${services_path}/bundlemgr/src/rdb/bms_rdb_open_callback.cpp",
    "${services_path}/bundlemgr/src/rdb/rdb_data_manager.cpp",
  ]

  sources += [ "bms_rdb_data_manager_test.cpp" ]
  sources += bundle_install_sources
  configs = [
    "${services_path}/bundlemgr:rdb_config",
    "${services_path}/bundlemgr/test:bundlemgr_test_config",
  ]

  deps = bundle_install_deps

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "appverify:libhapverify",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "device_info_manager:distributed_device_profile_client",
    "eventhandler:libeventhandler",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "syscap_codec:syscap_interface_shared",
  ]

  defines = [ "BMS_RDB_ENABLE" ]
  if (bundle_framework_default_app) {
    sources += default_app
    defines += [ "BUNDLE_FRAMEWORK_DEFAULT_APP" ]
    include_dirs += [ "include/default_app" ]
  }

  if (configpolicy_enable) {
    external_deps += [ "config_policy:configpolicy_util" ]
    defines += [ "CONFIG_POLOCY_ENABLE" ]
  }

  if (account_enable) {
    external_deps += [ "os_account:os_account_innerkits" ]
    defines += [ "ACCOUNT_ENABLE" ]
  }

  if (bundle_framework_free_install) {
    sources += aging
    sources += free_install
    sources += distributed_manager
    external_deps += [
      "ability_runtime:ability_manager",
      "ability_runtime:app_manager",
      "battery_manager:batterysrv_client",
      "device_info_manager:distributed_device_profile_client",
      "device_usage_statistics:usagestatsinner",
      "display_manager:displaymgr",
      "power_manager:powermgr_client",
      "syscap_codec:syscap_interface_shared",
    ]
    defines += [ "BUNDLE_FRAMEWORK_FREE_INSTALL" ]
  }

  if (device_manager_enable) {
    sources += [ "${services_path}/bundlemgr/src/bms_device_manager.cpp" ]
    external_deps += [ "device_manager:devicemanagersdk" ]
    defines += [ "DEVICE_MANAGER_ENABLE" ]
  }

  if (global_resmgr_enable) {
    defines += [ "GLOBAL_RESMGR_ENABLE" ]
    external_deps += [ "resource_management:global_resmgr" ]
  }

  if (hicollie_enable) {
    external_deps += [ "hicollie_native:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  if (hisysevent_enable) {
    sources += [ "${services_path}/bundlemgr/src/inner_event_report.cpp" ]
    external_deps += [ "hisysevent_native:libhisysevent" ]
    defines += [ "HISYSEVENT_ENABLE" ]
  }
}

group("unittest") {
  testonly = true
  deps = []
  if (bms_rdb_enable) {
    deps += [ ":BmsRdbDataManagerTest" ]
  }
}
