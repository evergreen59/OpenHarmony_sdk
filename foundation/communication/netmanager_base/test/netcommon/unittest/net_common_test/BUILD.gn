# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")

ohos_unittest("net_common_test") {
  module_out_path = "netmanager_base/net_common_test"

  include_dirs = [
    "$INNERKITS_ROOT/include",
    "$NETCONNMANAGER_COMMON_DIR/include",
    "$NETCONNMANAGER_SOURCE_DIR/include",
    "$INNERKITS_ROOT/netconnclient/include",
    "$INNERKITS_ROOT/netstatsclient/include",
    "$NETMANAGER_BASE_ROOT/utils/common_utils/include",
  ]

  sources = [
    "broadcast_manager_test.cpp",
    "errorcode_convertor_test.cpp",
    "net_manager_center_test.cpp",
    "net_mgr_log_wrapper_test.cpp",
    "net_setting_test.cpp",
    "netmanager_base_permission_test.cpp",
    "netmanager_hitrace_test.cpp",
    "route_utils_test.cpp",
  ]

  deps = [
    "$INNERKITS_ROOT/netconnclient:net_conn_parcel",
    "$INNERKITS_ROOT/netstatsclient:net_stats_parcel",
    "$NETCONNMANAGER_COMMON_DIR:net_service_common",
    "$NETCONNMANAGER_SOURCE_DIR:net_conn_manager",
    "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [
    "NETMGR_LOG_TAG = \"NetConnManager\"",
    "LOG_DOMAIN = 0xD0015B0",
  ]

  if (enable_netmgr_debug) {
    defines += [ "NETMGR_DEBUG" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  if (enable_sys_func) {
    defines += [ "SYS_FUNC" ]
  }

  part_name = "netmanager_base"
  subsystem_name = "communication"
}
