# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")

ohos_unittest("net_policy_manager_test") {
  module_out_path = "netmanager_base/net_policy_manager_test"

  sources = [
    "net_policy_callback_test.cpp",
    "net_policy_manager_test.cpp",
    "ut_firewall_rule.cpp",
    "ut_net_policy_base.cpp",
    "ut_net_policy_callback.cpp",
    "ut_net_policy_callback_ipc.cpp",
    "ut_net_policy_client.cpp",
    "ut_net_policy_core.cpp",
    "ut_net_policy_event_handler.cpp",
    "ut_net_policy_file.cpp",
    "ut_net_policy_firewall.cpp",
    "ut_net_policy_rule.cpp",
    "ut_net_policy_service_common.cpp",
    "ut_net_policy_traffic.cpp",
    "ut_net_quota_policy.cpp",
    "ut_netsys_policy_wrapper.cpp",
  ]

  include_dirs = [
    "$INNERKITS_ROOT/netpolicyclient/include",
    "$INNERKITS_ROOT/netpolicyclient/include/proxy",
    "$NETPOLICYMANAGER_SOURCE_DIR/include",
    "$NETPOLICYMANAGER_SOURCE_DIR/include/stub",
    "$INNERKITS_ROOT/netconnclient/include",
    "$NETCONNMANAGER_COMMON_DIR/include",
    "$NETSYSCONTROLLER_ROOT_DIR/include",
  ]

  deps = [
    "$INNERKITS_ROOT/netpolicyclient:net_policy_manager_if",
    "$NETCONNMANAGER_COMMON_DIR:net_service_common",
    "$NETMANAGER_BASE_ROOT/services/netpolicymanager:net_policy_manager",
    "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
  ]

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "common_event_service:cesfwk_core",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hitrace_native:hitrace_meter",
    "ipc:ipc_core",
    "netmanager_base:net_conn_manager_if",
    "netmanager_base:net_stats_manager_if",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [
    "NETMGR_LOG_TAG = \"NetPolicyUT\"",
    "LOG_DOMAIN = 0xD0015B0",
  ]

  if (enable_netmgr_debug) {
    defines += [ "NETMGR_DEBUG" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  part_name = "netmanager_base"
  subsystem_name = "communication"
}
