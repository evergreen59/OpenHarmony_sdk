# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/netmanager_ext/netmanager_ext_config.gni")

ohos_unittest("networkshare_manager_test") {
  module_out_path = "netmanager_ext/networkshare_manager_test"

  sources = [
    "interface_configuration_test.cpp",
    "networkshare_hisysevent_test.cpp",
    "networkshare_main_statemachine_test.cpp",
    "networkshare_manager_test.cpp",
    "networkshare_request_parcel_test.cpp",
    "networkshare_service_test.cpp",
    "networkshare_sub_statemachine_test.cpp",
    "networkshare_tracker_test.cpp",
    "networkshare_upstreammonitor_test.cpp",
    "static_configuration_test.cpp",
  ]

  include_dirs = [
    "$BASE_INNERKITS_ROOT/netconnclient/include/proxy",
    "$NETMANAGER_BASE_ROOT/utils/errorcode_utils/include",
    "$BLUETOOTH_ROOT/interfaces/inner_api/include",
    "$DHCP_MANAGER_ROOT/dhcp/interfaces/inner_api/include",
    "$DHCP_MANAGER_ROOT/dhcp/interfaces/inner_api/interfaces",
    "$DHCP_MANAGER_ROOT/interfaces/inner_api/include",
    "$DHCP_MANAGER_ROOT/interfaces/inner_api/interfaces",
    "$DHCP_MANAGER_ROOT/services/dhcp_server/include",
    "$DHCP_MANAGER_ROOT/services/mgr_service/include",
    "$EXT_INNERKITS_ROOT/ethernetclient/include",
    "$EXT_INNERKITS_ROOT/include",
    "$EXT_INNERKITS_ROOT/netshareclient/include",
    "$EXT_INNERKITS_ROOT/netshareclient/include/proxy",
    "$EXT_INNERKITS_ROOT/netshareclient/include/proxy/ipccallback",
    "$NETMANAGER_EXT_ROOT/services/networksharemanager/include",
    "$NETMANAGER_EXT_ROOT/services/networksharemanager/include/stub",
    "$NETSYSCONTROLLER_ROOT_DIR/include",
    "$THIRD_PARTY_ROOT/openssl/include",
    "$WIFI_MANAGER_ROOT/frameworks/native/c_adapter/inc",
    "$WIFI_MANAGER_ROOT/frameworks/native/include",
    "$WIFI_MANAGER_ROOT/frameworks/native/interfaces",
    "$USB_MANAGER_ROOT/utils/native/include",
    "$USB_MANAGER_ROOT/services/zidl/include",
    "//third_party/jsoncpp/include/json",
  ]

  deps = [
    "$EXT_INNERKITS_ROOT/ethernetclient:ethernet_parcel",
    "$EXT_INNERKITS_ROOT/netshareclient:net_tether_manager_if",
    "$NETMANAGER_EXT_ROOT/services/networksharemanager:net_tether_manager",
    "$NETMANAGER_EXT_ROOT/utils:net_manager_ext_common",
    "$THIRD_PARTY_ROOT/googletest:gmock_main",
    "$USB_MANAGER_ROOT/interfaces/innerkits:usbsrv_client",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "drivers_interface_usb:usb_idl_headers",
    "eventhandler:libeventhandler",
    "ipc:ipc_core",
    "wifi:wifi_sdk",
  ]

  defines = [
    "NETMGR_LOG_TAG = \"NetworkShareManager\"",
    "LOG_DOMAIN = 0xD0015B0",
  ]

  if (enable_netmgr_ext_debug) {
    defines += [ "NETMGR_DEBUG" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  part_name = "netmanager_ext"
  subsystem_name = "communication"
}
