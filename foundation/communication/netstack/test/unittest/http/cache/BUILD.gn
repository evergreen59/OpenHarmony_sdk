# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/communication/netstack/netstack_config.gni")

NETSTACK_NAPI_ROOT = "$SUBSYSTEM_DIR/netstack/frameworks/js/napi/"

utils_include = [
  "$SUBSYSTEM_DIR/netstack/utils/common_utils/include",
  "$SUBSYSTEM_DIR/netstack/utils/log/include",
  "$THIRD_PARTY_ROOT/curl/include",
]

common_external_deps = [
  "c_utils:utils",
  "hiviewdfx_hilog_native:libhilog",
]

ohos_unittest("http_cache_unittest") {
  module_out_path = "netstack/http_cache_unittest"

  include_dirs = [
    "$NETSTACK_NAPI_ROOT/http/cache/cache_constant/include",
    "$NETSTACK_NAPI_ROOT/http/cache/cache_strategy/include",
    "$NETSTACK_NAPI_ROOT/http/constant/include",
    "$NETSTACK_NAPI_ROOT/http/options/include",
    "$NETSTACK_NAPI_ROOT/http/cache/base64/include",
  ]
  include_dirs += utils_include

  external_deps = common_external_deps

  sources = [
    "$NETSTACK_NAPI_ROOT/http/cache/base64/src/base64_utils.cpp",
    "$NETSTACK_NAPI_ROOT/http/cache/cache_strategy/src/http_cache_request.cpp",
    "$NETSTACK_NAPI_ROOT/http/cache/cache_strategy/src/http_cache_response.cpp",
    "$NETSTACK_NAPI_ROOT/http/cache/cache_strategy/src/http_cache_strategy.cpp",
    "$NETSTACK_NAPI_ROOT/http/cache/cache_strategy/src/http_time.cpp",
    "$NETSTACK_NAPI_ROOT/http/constant/src/constant.cpp",
    "$NETSTACK_NAPI_ROOT/http/options/src/http_request_options.cpp",
    "$NETSTACK_NAPI_ROOT/http/options/src/http_response.cpp",
    "$SUBSYSTEM_DIR/netstack/utils/common_utils/src/netstack_common_utils.cpp",
    "Base64Test.cpp",
    "HttpCacheStrategyTest.cpp",
  ]

  part_name = "netstack"
  subsystem_name = "communication"
}

group("unittest") {
  testonly = true
  deps = [ ":http_cache_unittest" ]
}
