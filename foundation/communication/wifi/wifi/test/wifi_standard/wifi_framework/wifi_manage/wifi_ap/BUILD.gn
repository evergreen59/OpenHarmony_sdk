# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/wifi/wifi/wifi.gni")
config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//commonlibrary/c_utils/base/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap",
  ]
}
ohos_unittest("WifiApServiceTest") {
  module_out_path = "wifi/ap_test"
  sources = [
    "$WIFI_ROOT_DIR/frameworks/native/src/wifi_p2p_msg.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/handler.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/internal_message.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/message_queue.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/state.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/state_machine.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_config_use.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_idle_state.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_monitor.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_root_state.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_service.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_started_state.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_state_machine.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/ap_stations_manager.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap/wifi_ap_nat_manager.cpp",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common/wifi_chip_capability.cpp",
    "./Mock/mock_network_interface.cpp",
    "./Mock/mock_system_interface.cpp",
    "./Mock/mock_wifi_ap_hal_interface.cpp",
    "./Mock/mock_wifi_settings.cpp",
    "./Mock/operator_overload.cpp",
    "ap_config_use_test.cpp",
    "ap_idle_state_test.cpp",
    "ap_monitor_test.cpp",
    "ap_root_state_test.cpp",
    "ap_service_test.cpp",
    "ap_started_state_test.cpp",
    "ap_state_machine_test.cpp",
    "ap_stations_manager_test.cpp",
    "global_test.cpp",
    "wifi_ap_nat_manager_test.cpp",
  ]
  include_dirs = [
    "./",
    "../",
    "./Mock/",
    "//commonlibrary/c_utils/base/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "$WIFI_ROOT_DIR/frameworks/native/interfaces",
    "$WIFI_ROOT_DIR/services/wifi_standard/ipc_framework/cRPC/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/net_helper",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/config",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/log",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit/utils",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_common",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/common",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client/idl_interface",
    "$WIFI_ROOT_DIR/utils/inc",
    "$DHCP_ROOT_DIR/services/mgr_service/include",
    "$DHCP_ROOT_DIR/interfaces/inner_api/include",
    "$DHCP_ROOT_DIR/interfaces/inner_api/interfaces",
    "//third_party/googletest/googlemock/include",
    "//third_party/googletest/googletest/include",
    "$WIFI_ROOT_DIR/services/wifi_standard/include",
  ]
  ldflags = [
    "-fPIC",
    "-Wl,-E",
    "-Wl,--wrap=system",
    "--coverage",
  ]
  deps = [
    "$DHCP_ROOT_DIR/services/mgr_service:dhcp_manager_service",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client:wifi_idl_client",
    "$WIFI_ROOT_DIR/services/wifi_standard/wifi_framework/wifi_toolkit:wifi_toolkit",
    "$WIFI_ROOT_DIR/utils:wifi_utils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
  ]
  defines = [
    "AP_INTF=\"$wifi_feature_with_ap_intf\"",
    "AP_INSTANCE_MAX_NUM=$wifi_feature_with_ap_num",
  ]

  if (wifi_feature_with_dhcp_disable) {
    defines += [ "WIFI_DHCP_DISABLED" ]
  }

  part_name = "wifi"
  subsystem_name = "communication"
}
group("unittest") {
  testonly = true
  deps = []
  deps += [ ":WifiApServiceTest" ]
}
