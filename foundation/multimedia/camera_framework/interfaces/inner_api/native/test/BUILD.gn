# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

config("camera_config") {
  include_dirs = [
    "//foundation/multimedia/camera_framework/interfaces/inner_api/native/camera/include",
    "//foundation/multimedia/camera_framework/interfaces/inner_api/native/test",
    "//foundation/multimedia/camera_framework/services/camera_service/include",
    "//foundation/multimedia/camera_framework/services/camera_service/binder/base/include",
    "//foundation/multimedia/camera_framework/services/camera_service/binder/client/include",
    "//foundation/multimedia/camera_framework/services/camera_service/binder/server/include",
    "//foundation/graphic/graphic_2d/frameworks/surface/include",
    "//drivers/peripheral/camera/interfaces/metadata/include",
    "//utils/system/safwk/native/include",
    "//drivers/peripheral/display/interfaces/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "//base/security/access_token/interfaces/innerkits/token_setproc/include",
  ]

  include_dirs += [
    "//drivers/peripheral/camera/interfaces/include",
    "//drivers/peripheral/camera/interfaces/hdi_ipc",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/server",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/device",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/operator",
    "//drivers/peripheral/camera/interfaces/hdi_ipc/callback/host",
  ]
}

ohos_executable("camera_video") {
  install_enable = false
  sources = [
    "camera_video.cpp",
    "test_common.cpp",
  ]
  cflags = [
    "-fPIC",
    "-g",
  ]
  cflags += [ "-Wall" ]
  cflags_cc = cflags

  configs = [ ":camera_config" ]

  deps = [
    "//drivers/interface/camera/v1_0:libcamera_proxy_1.0",
    "//drivers/peripheral/camera/interfaces/metadata:metadata",
    "//foundation/graphic/graphic_2d:libsurface",
    "//foundation/multimedia/camera_framework/frameworks/native/camera:camera_framework",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "multimedia_player_framework:media_client",
  ]
  part_name = "multimedia_camera_framework"
  subsystem_name = "multimedia"
}

ohos_executable("camera_capture") {
  install_enable = false
  sources = [
    "camera_capture.cpp",
    "test_common.cpp",
  ]
  cflags = [
    "-fPIC",
    "-g",
  ]
  cflags += [ "-Wall" ]
  cflags_cc = cflags

  configs = [ ":camera_config" ]

  deps = [
    "//drivers/interface/camera/v1_0:libcamera_proxy_1.0",
    "//drivers/peripheral/camera/interfaces/metadata:metadata",
    "//foundation/graphic/graphic_2d:libsurface",
    "//foundation/multimedia/camera_framework/frameworks/native/camera:camera_framework",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
  part_name = "multimedia_camera_framework"
  subsystem_name = "multimedia"
}

ohos_executable("camera_capture_video") {
  install_enable = false
  sources = [
    "camera_capture_video.cpp",
    "test_common.cpp",
  ]
  cflags = [
    "-fPIC",
    "-g",
  ]
  cflags += [ "-Wall" ]
  cflags_cc = cflags

  configs = [ ":camera_config" ]

  deps = [
    "//drivers/interface/camera/v1_0:libcamera_proxy_1.0",
    "//drivers/peripheral/camera/interfaces/metadata:metadata",
    "//foundation/graphic/graphic_2d:libsurface",
    "//foundation/multimedia/camera_framework/frameworks/native/camera:camera_framework",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
  part_name = "multimedia_camera_framework"
  subsystem_name = "multimedia"
}
