# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/player_framework/config.gni")

config("media_engine_gst_player_config") {
  visibility = [ ":*" ]

  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-DOHOS_EXT_FUNC",
    "-DOHOS_OPT_COMPAT",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
    "-Wno-deprecated-declarations",
  ]

  include_dirs = [
    "//foundation/multimedia/player_framework/services/engine/gstreamer/plugins/sink/memsink",
    "//foundation/multimedia/player_framework/services/utils/include",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native",
    "//foundation/multimedia/player_framework/services/services/engine_intf",
    "//foundation/multimedia/player_framework/services/common",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/playbin_adapter",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/appsrc_wrap",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/metadata",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/utils",
    "//foundation/multimedia/audio_framework/frameworks/innerkitsimpl/common/include",
    "//foundation/multimedia/audio_framework/interfaces/innerkits/native/audiocommon/include",
    "//foundation/multimedia/audio_framework/interfaces/innerkits/native/audiomanager/include",
    "//foundation/graphic/graphic_2d/frameworks/surface/include",
    "//foundation/graphic/graphic_2d/utils/sync_fence/export",
    "//drivers/peripheral/audio/interfaces/include",
    "//drivers/peripheral/display/interfaces/include",
    "//third_party/gstreamer/gstreamer",
    "//third_party/gstreamer/gstreamer/libs",
    "//third_party/gstreamer/gstplugins_base/gst",
    "//third_party/gstreamer/gstplugins_base/gst-libs",
    "//third_party/gstreamer/gstplugins_base/gst-libs/gst/video",
    "//third_party/gstreamer/gstplugins_bad/gst-libs",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/glib/gmodule",
    "//commonlibrary/c_utils/base/include",
  ]
  defines = []
  defines += player_framework_defines
}

ohos_static_library("media_engine_gst_player") {
  sources = [
    "player_codec_ctrl.cpp",
    "player_engine_gst_impl.cpp",
    "player_sinkprovider.cpp",
    "player_track_parse.cpp",
  ]

  configs = [
    ":media_engine_gst_player_config",
    "//foundation/graphic/graphic_2d/frameworks/surface:surface_public_config",
    "//foundation/multimedia/player_framework/services/dfx:media_service_log_dfx_public_config",
    "//foundation/multimedia/player_framework/services/utils:media_service_utils_public_config",
  ]

  deps = [
    "//foundation/graphic/graphic_2d/frameworks/surface:surface",
    "//foundation/graphic/graphic_2d/utils:sync_fence",
    "//foundation/multimedia/player_framework/services/dfx:media_service_log_dfx",
    "//foundation/multimedia/player_framework/services/utils:media_service_utils",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
    "//third_party/gstreamer/gstplugins_base:gstvideo",
    "//third_party/gstreamer/gstreamer:gstreamer",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "multimedia_audio_framework:audio_client",
  ]

  subsystem_name = "multimedia"
  part_name = "multimedia_player_framework"
}
