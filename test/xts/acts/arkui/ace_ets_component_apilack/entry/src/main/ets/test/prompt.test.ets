/**
 * Copyright (c) 2022 Shenzhen Kaihong Digital Industry Development Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import router from '@system.router';
import {describe, beforeAll, beforeEach, afterEach, afterAll, it, expect} from "hypium/index"
import Utils from './Utils.ets'
import events_emitter from '@ohos.events.emitter';

export default function promptShowDialogJsunit() {
  describe('promptShowDialogTest', function () {
    beforeAll(async function (done) {
      console.info("flex beforeEach start");
      let options = {
        uri: 'pages/prompt',
      }
      try {
        router.clear();
        let pages = router.getState();
        console.info("get prompt state success " + JSON.stringify(pages));
        if (!("prompt" == pages.name)) {
          console.info("get prompt state success " + JSON.stringify(pages.name));
          let result = await router.push(options);
          await Utils.sleep(2000);
          console.info("push prompt page success " + JSON.stringify(result));
        }
      } catch (err) {
        console.error("push prompt page error: " + err);
      }
      done()
    });

    afterEach(async function () {
      await Utils.sleep(1000);
      console.info("promptShowDialog after each called");
    });

    /*
     * @tc.number       SUB_ACE_BASIC_ETS_API_001
     * @tc.name         testpromptShowDialog001
     * @tc.desic         acepromptShowDialogEtsTest001
     */
    it('testpromptShowDialog001', 0, async function (done) {
      console.info('promptShowDialog testpromptShowDialog001 START');
      await Utils.sleep(1000);
      try {
        var innerEventOne = {
          eventId: 60220,
          priority: events_emitter.EventPriority.LOW
        }
        var callback1 = (eventData) => {
          console.info("testpromptShowDialog001 get event state result is: " + JSON.stringify(eventData));
          expect(eventData.data.STATUS).assertEqual(true);
          done();
        }
        console.info("onSelect_001 click result is: " + JSON.stringify(sendEventByKey('showDialogText', 10, "")));
        events_emitter.on(innerEventOne, callback1);
      } catch (err) {
        console.info("testpromptShowDialog001 on events_emitter err : " + JSON.stringify(err));
      }
      console.info('testpromptShowDialog001 END');
    });

    /*
     * @tc.number       SUB_ACE_BASIC_ETS_API_002
     * @tc.name         testshowActionMenu0001
     * @tc.desic         aceshowActionMenuEtsTest0001
     */
    it('testshowActionMenu0001', 0, async function (done) {
      console.info('promptShowDialog testshowActionMenu0001 START');
      await Utils.sleep(1000);
      try {
        var innerEventTwo = {
          eventId: 60221,
          priority: events_emitter.EventPriority.LOW
        }
        var callback2 = (backData1) => {
          console.info("onRequestPopupData_0011 get event state result is: " + JSON.stringify(backData1));
          expect(backData1.data.STATUS).assertEqual(true);
          done();
        }
        console.info("onSelect_002 click result is: " + JSON.stringify(sendEventByKey('showActionMenuText', 10, "")));
        events_emitter.on(innerEventTwo, callback2);
      } catch (err) {
        console.info("onRequestPopupData_0011 on events_emitter err : " + JSON.stringify(err));
      }
      console.info('testshowActionMenu0001 END');
    });
  })
}
