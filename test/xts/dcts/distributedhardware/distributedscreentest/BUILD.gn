# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//test/xts/tools/build/suite.gni")

module_output_path = "dcts/distributedhardware"

ohos_moduletest_suite("DctsdisSreenTest") {
  module_out_path = module_output_path
  include_dirs = [
    "//foundation/distributedhardware/distributed_screen/services/common/utils/include",
    "//foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_sink/include",
    "///foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_source/include",
    "//foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_source/include/callback",
    "//foundation/distributedhardware/distributed_hardware_fwk/common/utils/include",
    "//foundation/window/window_manager//interfaces/innerkits/dm",
    "//foundation/distributedhardware/distributed_screen/services/screenclient/include",
    "//foundation/window/window_manager//interfaces/innerkits/wm",
    "//foundation/distributedhardware/distributed_screen/common/include",
    "//foundation/distributedhardware/distributed_hardware_fwk/common/log/include",
    "//foundation/distributedhardware/distributed_hardware_fwk/utils/include/log",
    "//base/security/access_token/interfaces/innerkits/accesstoke/include",
    "//base/security/access_token/interfaces/innerkits/nativetoken/include",
    "//base/security/access_token/interfaces/innerkits/token_setproc/include",
    "//foundation/communication/dsoftbus/interfaces/kits/common",
  ]

  include_dirs +=
      [ "foundation/multimedia/player_framework/interfaces/inner_api/native" ]

  sources = [
    "decoder_demo.cpp",
    "dsreen_automat_test.cpp",
    "test.cpp",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"DSreenClientTest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  deps = [
    "//base/security/access_token/interfaces/innerkits/nativetoken:libnativetoken",
    "//base/security/access_token/interfaces/innerkits/token_setproc:libtoken_setproc",
    "//foundation/communication/dsoftbus/adapter:softbus_adapter",
    "//foundation/communication/dsoftbus/sdk:softbus_client",
    "//foundation/distributedhardware/distributed_screen/common:distributed_screen_utils",
    "//foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_sink:distributed_screen_sink_sdk",
    "//foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_source:distributed_screen_source_sdk",
    "//foundation/distributedhardware/distributed_screen/services/screenclient:distributed_screen_client",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//foundation/window/window_manager/dm:libdm",
    "//foundation/window/window_manager/wm:libwm",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "hiviewdfx_hilog_native:libhilog",
    "multimedia_player_framework:media_client",
  ]

  subsystem_name = "distributedhardware"
  part_name = "distributed_screen"
}
