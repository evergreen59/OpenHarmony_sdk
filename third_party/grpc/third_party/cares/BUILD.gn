# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//developtools/profiler/build/config.gni")

ohos_shared_library("ares") {
  ares_srcs = [
    "ares__close_sockets.c",
    "ares__get_hostent.c",
    "ares__parse_into_addrinfo.c",
    "ares__read_line.c",
    "ares__readaddrinfo.c",
    "ares__sortaddrinfo.c",
    "ares__timeval.c",
    "ares_android.c",
    "ares_cancel.c",
    "ares_create_query.c",
    "ares_data.c",
    "ares_destroy.c",
    "ares_expand_name.c",
    "ares_expand_string.c",
    "ares_fds.c",
    "ares_free_hostent.c",
    "ares_free_string.c",
    "ares_freeaddrinfo.c",
    "ares_getaddrinfo.c",
    "ares_getenv.c",
    "ares_gethostbyaddr.c",
    "ares_gethostbyname.c",
    "ares_getnameinfo.c",
    "ares_getopt.c",
    "ares_getsock.c",
    "ares_init.c",
    "ares_library_init.c",
    "ares_llist.c",
    "ares_mkquery.c",
    "ares_nowarn.c",
    "ares_options.c",
    "ares_parse_a_reply.c",
    "ares_parse_aaaa_reply.c",
    "ares_parse_mx_reply.c",
    "ares_parse_naptr_reply.c",
    "ares_parse_ns_reply.c",
    "ares_parse_ptr_reply.c",
    "ares_parse_soa_reply.c",
    "ares_parse_srv_reply.c",
    "ares_parse_txt_reply.c",
    "ares_platform.c",
    "ares_process.c",
    "ares_query.c",
    "ares_search.c",
    "ares_send.c",
    "ares_strcasecmp.c",
    "ares_strdup.c",
    "ares_strsplit.c",
    "ares_strerror.c",
    "ares_timeout.c",
    "ares_version.c",
    "ares_writev.c",
    "bitncmp.c",
    "inet_net_pton.c",
    "inet_ntop.c",
    "windows_port.c",
  ]
  sources = []
  foreach(src, ares_srcs) {
    sources += [ "../../../cares/" + src ]
  }

  cflags = [
    "-D_GNU_SOURCE",
    "-D_HAS_EXCEPTIONS=0",
    "-DHAVE_CONFIG_H",
    "-Wno-macro-redefined",
  ]
  ldflags = []
  if (target_os == "win") {
    cflags += [
      "-DNOMINMAX",
      "-D_CRT_SECURE_NO_DEPRECATE",
      "-D_CRT_NONSTDC_NO_DEPRECATE",
      "-D_WIN32_WINNT=0x0600",
    ]
    ldflags += [ "-defaultlib:ws2_32.lib" ]
  }

  defines = [ "CARES_STATICLIB" ]

  include_dirs = [
    ".",
    "../../../cares",
  ]
  if (target_os == "android" || target_os == "ohos" || target_os == "aosp") {
    include_dirs += [ "config_android" ]
  } else if (target_os == "linux") {
    include_dirs += [ "config_linux" ]
  } else if (target_os == "win") {
    include_dirs += [ "config_windows" ]
  }

  # print("cares_target_os is $target_os")
  install_enable = true
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
}
