# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

group("gstreamer_packages") {
  deps = [
    ":gst-inspect",
    ":gst-launch",
    ":gstbase",
    ":gstcoreelements",
    ":gstreamer",
  ]
}

config("gst_config") {
  visibility = [ ":*" ]

  include_dirs = [
    ".",
    "gst/parse",
    "gst/",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/glib/gmodule",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-DBUILDING_GST",
    "-DG_LOG_DOMAIN=\"Gstreamer\"",
    "-DGST_DISABLE_DEPRECATED",
    "-DHAVE_CONFIG_H",
    "-DOHOS_EXT_FUNC",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-deprecated-declarations",
    "-Wno-incompatible-pointer-types",
    "-Wno-builtin-requires-header",
    "-Wno-unused-variable",
    "-Wno-unused-function",
  ]
}

ohos_source_set("gst_source") {
  sources = [
    "gst/gst.c",
    "gst/gstallocator.c",
    "gst/gstatomicqueue.c",
    "gst/gstbin.c",
    "gst/gstbuffer.c",
    "gst/gstbufferlist.c",
    "gst/gstbufferpool.c",
    "gst/gstbus.c",
    "gst/gstcaps.c",
    "gst/gstcapsfeatures.c",
    "gst/gstchildproxy.c",
    "gst/gstclock.c",
    "gst/gstcontext.c",
    "gst/gstcontrolbinding.c",
    "gst/gstcontrolsource.c",
    "gst/gstdatetime.c",
    "gst/gstdebugutils.c",
    "gst/gstdevice.c",
    "gst/gstdevicemonitor.c",
    "gst/gstdeviceprovider.c",
    "gst/gstdeviceproviderfactory.c",
    "gst/gstdynamictypefactory.c",
    "gst/gstelement.c",
    "gst/gstelementfactory.c",
    "gst/gstenumtypes.c",
    "gst/gsterror.c",
    "gst/gstevent.c",
    "gst/gstformat.c",
    "gst/gstghostpad.c",
    "gst/gstinfo.c",
    "gst/gstiterator.c",
    "gst/gstmemory.c",
    "gst/gstmessage.c",
    "gst/gstmeta.c",
    "gst/gstminiobject.c",
    "gst/gstobject.c",
    "gst/gstpad.c",
    "gst/gstpadtemplate.c",
    "gst/gstparamspecs.c",
    "gst/gstparse.c",
    "gst/gstpipeline.c",
    "gst/gstplugin.c",
    "gst/gstpluginfeature.c",
    "gst/gstpluginloader.c",
    "gst/gstpoll.c",
    "gst/gstpreset.c",
    "gst/gstpromise.c",
    "gst/gstprotection.c",
    "gst/gstquark.c",
    "gst/gstquery.c",
    "gst/gstregistry.c",
    "gst/gstregistrybinary.c",
    "gst/gstregistrychunks.c",
    "gst/gstsample.c",
    "gst/gstsegment.c",
    "gst/gststreamcollection.c",
    "gst/gststreams.c",
    "gst/gststructure.c",
    "gst/gstsystemclock.c",
    "gst/gsttaglist.c",
    "gst/gsttagsetter.c",
    "gst/gsttask.c",
    "gst/gsttaskpool.c",
    "gst/gsttoc.c",
    "gst/gsttocsetter.c",
    "gst/gsttracer.c",
    "gst/gsttracerfactory.c",
    "gst/gsttracerrecord.c",
    "gst/gsttracerutils.c",
    "gst/gsttypefind.c",
    "gst/gsttypefindfactory.c",
    "gst/gsturi.c",
    "gst/gstutils.c",
    "gst/gstvalue.c",
    "gst/parse/grammar.tab.c",
    "gst/parse/lex.priv_gst_parse_yy.c",
  ]

  configs = [ ":gst_config" ]
}

config("gstprintf_config") {
  include_dirs = [
    ".",
    "gst/printf",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/glib/gmodule",
  ]

  cflags = [
    "-DHAVE_CONFIG_H",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-DG_LOG_DOMAIN=\"GStreamer\"",
  ]
}

ohos_source_set("gstprintf_source") {
  sources = [
    "gst/printf/asnprintf.c",
    "gst/printf/printf-args.c",
    "gst/printf/printf-extension.c",
    "gst/printf/printf-parse.c",
    "gst/printf/printf.c",
    "gst/printf/vasnprintf.c",
  ]

  configs = [ ":gstprintf_config" ]
}

ohos_static_library("gstprintf") {
  deps = [ ":gstprintf_source" ]
}

ohos_shared_library("gstreamer") {
  deps = [
    ":gst_source",
    ":gstprintf",
    "//third_party/glib:glib",
    "//third_party/glib:gmodule",
    "//third_party/glib:gobject",
  ]

  part_name = "multimedia_player_framework"
  subsystem_name = "multimedia"
}

config("gstbase_config") {
  include_dirs = [
    ".",
    "./libs",
    "./libs/gst/base",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/glib/gmodule",
  ]

  cflags = [
    "-DHAVE_CONFIG_H",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-Wno-undefined-internal",
    "-Wno-unused-function",
    "-DOHOS_EXT_FUNC",
    "-DOHOS_OPT_CVE",
    "-DOHOS_OPT_COMPAT",
    "-DOHOS_OPT_PERFORMANCE",
    "-DOHOS_GLIB_COMPATIBLE",
    "-DG_LOG_DOMAIN=\"GStreamer\"",
  ]
}

ohos_source_set("gstbase_source") {
  sources = [
    "libs/gst/base/gstadapter.c",
    "libs/gst/base/gstaggregator.c",
    "libs/gst/base/gstbaseparse.c",
    "libs/gst/base/gstbasesink.c",
    "libs/gst/base/gstbasesrc.c",
    "libs/gst/base/gstbasetransform.c",
    "libs/gst/base/gstbitreader.c",
    "libs/gst/base/gstbitwriter.c",
    "libs/gst/base/gstbytereader.c",
    "libs/gst/base/gstbytewriter.c",
    "libs/gst/base/gstcollectpads.c",
    "libs/gst/base/gstdataqueue.c",
    "libs/gst/base/gstflowcombiner.c",
    "libs/gst/base/gstpushsrc.c",
    "libs/gst/base/gstqueuearray.c",
    "libs/gst/base/gsttypefindhelper.c",
  ]

  configs = [ ":gstbase_config" ]
}

ohos_shared_library("gstbase") {
  deps = [
    ":gstbase_source",
    ":gstreamer",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
  ]
  part_name = "multimedia_player_framework"
  subsystem_name = "multimedia"
}

config("gstcoreelements_config") {
  include_dirs = [
    ".",
    "./libs",
    "./plugins/elements",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/glib/gmodule",
  ]

  cflags = [
    "-DHAVE_CONFIG_H",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-Wno-incompatible-pointer-types",
    "-Wno-error=incompatible-pointer-types",
    "-DOHOS_OPT_COMPAT",
    "-DOHOS_OPT_STABLE",
    "-DOHOS_EXT_FUNC",
    "-DG_LOG_DOMAIN=\"GStreamer\"",
  ]
}

ohos_source_set("gstcoreelements_source") {
  sources = [
    "plugins/elements/gstcapsfilter.c",
    "plugins/elements/gstcoreelementsplugin.c",
    "plugins/elements/gstelements_private.c",
    "plugins/elements/gstfakesink.c",
    "plugins/elements/gstfdsink.c",
    "plugins/elements/gstfdsrc.c",
    "plugins/elements/gstfilesrc.c",
    "plugins/elements/gstidentity.c",
    "plugins/elements/gstinputselector.c",
    "plugins/elements/gstmultiqueue.c",
    "plugins/elements/gstqueue.c",
    "plugins/elements/gstqueue2.c",
    "plugins/elements/gsttee.c",
    "plugins/elements/gsttypefindelement.c",
  ]

  configs = [ ":gstcoreelements_config" ]
}

ohos_shared_library("gstcoreelements") {
  deps = [
    ":gstbase",
    ":gstcoreelements_source",
    ":gstreamer",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
  ]

  relative_install_dir = "media/plugins"
  part_name = "multimedia_player_framework"
  subsystem_name = "multimedia"
}

config("gstcoretracers_config") {
  include_dirs = [
    ".",
    "gst/parse",
    "gst/",
    "./plugins/tracers",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/glib/gmodule",
  ]

  cflags = [
    "-DHAVE_CONFIG_H",
    "-DGST_USE_UNSTABLE_API",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-Wno-undefined-internal",
    "-Wno-unused-function",
    "-DG_LOG_DOMAIN=\"GStreamer\"",
  ]
}

ohos_source_set("gstcoretracers_source") {
  sources = [
    "plugins/tracers/gstfactories.c",
    "plugins/tracers/gstlatency.c",
    "plugins/tracers/gstleaks.c",
    "plugins/tracers/gstlog.c",
    "plugins/tracers/gstrusage.c",
    "plugins/tracers/gststats.c",
    "plugins/tracers/gsttracers.c",
  ]

  configs = [ ":gstcoretracers_config" ]
}

ohos_shared_library("gstcoretracers") {
  deps = [
    ":gstcoretracers_source",
    ":gstreamer",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
  ]

  relative_install_dir = "media/plugins"
  part_name = "multimedia_player_framework"
  subsystem_name = "multimedia"
}

config("gsttools_config") {
  include_dirs = [
    ".",
    "./libs",
    "./plugins/elements",
    "./tools",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/glib/gmodule",
  ]

  cflags = [
    "-DHAVE_CONFIG_H",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-Wno-error=incompatible-pointer-types",
    "-DG_LOG_DOMAIN=\"GStreamer\"",
  ]
}

ohos_source_set("gst_inspect_source") {
  sources = [ "tools/gst-inspect.c" ]

  configs = [ ":gsttools_config" ]
}

ohos_executable("gst-inspect") {
  deps = [
    ":gst_inspect_source",
    ":gstreamer",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
  ]
  part_name = "multimedia_player_framework"
  subsystem_name = "multimedia"
}

ohos_source_set("gst_launch_source") {
  sources = [ "tools/gst-launch.c" ]

  configs = [ ":gsttools_config" ]
}

ohos_executable("gst-launch") {
  deps = [
    ":gst_launch_source",
    ":gstreamer",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
  ]
  part_name = "multimedia_player_framework"
  subsystem_name = "multimedia"
}
