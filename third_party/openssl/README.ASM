/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2022. All rights reserved.
 * Description: This README describes how to generate the .S files.
 * Create: 2020-05-30
 */

  these files used in Build.gn, such as:
      "crypto/aes/asm/arm32/aes-armv4.S",
      "crypto/aes/asm/arm32/aesv8-armx.S",
      "crypto/aes/asm/arm32/bsaes-armv7.S",
      "crypto/armv4cpuid.S",
      "crypto/bn/asm/arm32/armv4-gf2m.S",
      "crypto/bn/asm/arm32/armv4-mont.S",
      "crypto/chacha/asm/arm32/chacha-armv4.S",
      "crypto/ec/asm/arm32/ecp_nistz256-armv4.S",
      "crypto/modes/asm/arm32/ghash-armv4.S",
      "crypto/modes/asm/arm32/ghashv8-armx.S",
      "crypto/poly1305/asm/arm32/poly1305-armv4.S",
      "crypto/sha/asm/arm32/keccak1600-armv4.S",
      "crypto/sha/asm/arm32/sha1-armv4-large.S",
      "crypto/sha/asm/arm32/sha256-armv4.S",
      "crypto/sha/asm/arm32/sha512-armv4.S",
      "crypto/aes/asm/arm64/aesv8-armx.S",
      "crypto/aes/asm/arm64/vpaes-armv8.S",
      "crypto/arm64cpuid.S",
      "crypto/bn/asm/arm64/armv8-mont.S",
      "crypto/chacha/asm/arm64/chacha-armv8.S",
      "crypto/ec/asm/arm64/ecp_nistz256-armv8.S",
      "crypto/modes/asm/arm64/ghashv8-armx.S",
      "crypto/poly1305/asm/arm64/poly1305-armv8.S",
      "crypto/sha/asm/arm64/keccak1600-armv8.S",
      "crypto/sha/asm/arm64/sha1-armv8.S",
      "crypto/sha/asm/arm64/sha256-armv8.S",
      "crypto/sha/asm/arm64/sha512-armv8.S",
      "crypto/aes/asm/x86_64/aesni-mb-x86_64.s",
      "crypto/aes/asm/x86_64/aesni-sha1-x86_64.s",
      "crypto/aes/asm/x86_64/aesni-sha256-x86_64.s",
      "crypto/aes/asm/x86_64/aesni-x86_64.s",
      "crypto/aes/asm/x86_64/vpaes-x86_64.s",
      "crypto/bn/asm/x86_64/rsaz-avx2.s",
      "crypto/bn/asm/x86_64/rsaz-x86_64.s",
      "crypto/bn/asm/x86_64/x86_64-gf2m.s",
      "crypto/bn/asm/x86_64/x86_64-mont.s",
      "crypto/bn/asm/x86_64/x86_64-mont5.s",
      "crypto/chacha/asm/x86_64/chacha-x86_64.s",
      "crypto/ec/asm/x86_64/ecp_nistz256-x86_64.s",
      "crypto/ec/asm/x86_64/x25519-x86_64.s",
      "crypto/md5/asm/x86_64/md5-x86_64.s",
      "crypto/modes/asm/x86_64/aesni-gcm-x86_64.s",
      "crypto/modes/asm/x86_64/ghash-x86_64.s",
      "crypto/poly1305/asm/x86_64/poly1305-x86_64.s",
      "crypto/rc4/asm/x86_64/rc4-md5-x86_64.s",
      "crypto/rc4/asm/x86_64/rc4-x86_64.s",
      "crypto/sha/asm/x86_64/keccak1600-x86_64.s",
      "crypto/sha/asm/x86_64/sha1-mb-x86_64.s",
      "crypto/sha/asm/x86_64/sha1-x86_64.s",
      "crypto/sha/asm/x86_64/sha256-mb-x86_64.s",
      "crypto/sha/asm/x86_64/sha256-x86_64.s",
      "crypto/sha/asm/x86_64/sha512-x86_64.s",
      "crypto/whrlpool/asm/x86_64/wp-x86_64.s",
      "crypto/x86_64cpuid.s",
    are generated by perl executing .pl files. you can also execute the script of create_asm_file.sh to generate it.